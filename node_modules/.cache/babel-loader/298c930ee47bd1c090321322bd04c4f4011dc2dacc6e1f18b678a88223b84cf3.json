{"ast":null,"code":"/**\n * Subscription and payment types for CryptoSniper Pro\n */\n\n// Predefined subscription plans\nexport const SUBSCRIPTION_PLANS = {\n  free: {\n    id: 'free',\n    name: 'Free',\n    price: 0,\n    currency: 'USD',\n    interval: 'monthly',\n    features: ['Demo trading', 'Testnet access', 'Basic tutorials', '5 saved configs', 'Community access'],\n    limits: {\n      maxSnipeConfigs: 5,\n      maxDailyTrades: 10,\n      realTrading: false,\n      mevProtection: false,\n      prioritySupport: false,\n      advancedAnalytics: false\n    }\n  },\n  pro: {\n    id: 'pro',\n    name: 'Pro',\n    price: 29,\n    currency: 'USD',\n    interval: 'monthly',\n    features: ['Real mainnet trading', 'Unlimited configs', 'Advanced analytics', 'Priority support', 'All tutorials', 'Discord access'],\n    limits: {\n      maxSnipeConfigs: -1,\n      // unlimited\n      maxDailyTrades: 100,\n      realTrading: true,\n      mevProtection: false,\n      prioritySupport: true,\n      advancedAnalytics: true\n    }\n  },\n  premium: {\n    id: 'premium',\n    name: 'Premium',\n    price: 99,\n    currency: 'USD',\n    interval: 'monthly',\n    features: ['Everything in Pro', 'MEV protection', 'Custom strategies', 'Dedicated support', 'Early access features', 'Personal consultation'],\n    limits: {\n      maxSnipeConfigs: -1,\n      maxDailyTrades: -1,\n      // unlimited\n      realTrading: true,\n      mevProtection: true,\n      prioritySupport: true,\n      advancedAnalytics: true\n    }\n  }\n};","map":{"version":3,"names":["SUBSCRIPTION_PLANS","free","id","name","price","currency","interval","features","limits","maxSnipeConfigs","maxDailyTrades","realTrading","mevProtection","prioritySupport","advancedAnalytics","pro","premium"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/types/subscription.ts"],"sourcesContent":["/**\n * Subscription and payment types for CryptoSniper Pro\n */\n\nexport interface SubscriptionPlan {\n  id: string;\n  name: string;\n  price: number;\n  currency: 'USD' | 'ETH';\n  interval: 'monthly' | 'yearly';\n  features: string[];\n  limits: {\n    maxSnipeConfigs: number;\n    maxDailyTrades: number;\n    realTrading: boolean;\n    mevProtection: boolean;\n    prioritySupport: boolean;\n    advancedAnalytics: boolean;\n  };\n}\n\nexport interface PaymentProvider {\n  id: string;\n  name: string;\n  type: 'stripe' | 'coinbase' | 'paypal' | 'crypto';\n  enabled: boolean;\n  testMode: boolean;\n}\n\nexport interface Subscription {\n  id: string;\n  userId: string;\n  planId: string;\n  status: 'active' | 'canceled' | 'past_due' | 'trialing' | 'incomplete';\n  currentPeriodStart: number;\n  currentPeriodEnd: number;\n  cancelAtPeriodEnd: boolean;\n  trialEnd?: number;\n  paymentMethod?: PaymentMethod;\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface PaymentMethod {\n  id: string;\n  type: 'card' | 'crypto' | 'paypal';\n  last4?: string;\n  brand?: string;\n  cryptoAddress?: string;\n  isDefault: boolean;\n}\n\nexport interface Invoice {\n  id: string;\n  subscriptionId: string;\n  amount: number;\n  currency: string;\n  status: 'paid' | 'pending' | 'failed' | 'refunded';\n  paymentDate?: number;\n  dueDate: number;\n  description: string;\n  invoiceUrl?: string;\n}\n\nexport interface PaymentIntent {\n  id: string;\n  amount: number;\n  currency: string;\n  status: 'requires_payment_method' | 'requires_confirmation' | 'requires_action' | 'processing' | 'succeeded' | 'canceled';\n  clientSecret?: string;\n  paymentMethod?: PaymentMethod;\n  metadata: Record<string, any>;\n}\n\n// Predefined subscription plans\nexport const SUBSCRIPTION_PLANS: Record<string, SubscriptionPlan> = {\n  free: {\n    id: 'free',\n    name: 'Free',\n    price: 0,\n    currency: 'USD',\n    interval: 'monthly',\n    features: [\n      'Demo trading',\n      'Testnet access',\n      'Basic tutorials',\n      '5 saved configs',\n      'Community access'\n    ],\n    limits: {\n      maxSnipeConfigs: 5,\n      maxDailyTrades: 10,\n      realTrading: false,\n      mevProtection: false,\n      prioritySupport: false,\n      advancedAnalytics: false\n    }\n  },\n  pro: {\n    id: 'pro',\n    name: 'Pro',\n    price: 29,\n    currency: 'USD',\n    interval: 'monthly',\n    features: [\n      'Real mainnet trading',\n      'Unlimited configs',\n      'Advanced analytics',\n      'Priority support',\n      'All tutorials',\n      'Discord access'\n    ],\n    limits: {\n      maxSnipeConfigs: -1, // unlimited\n      maxDailyTrades: 100,\n      realTrading: true,\n      mevProtection: false,\n      prioritySupport: true,\n      advancedAnalytics: true\n    }\n  },\n  premium: {\n    id: 'premium',\n    name: 'Premium',\n    price: 99,\n    currency: 'USD',\n    interval: 'monthly',\n    features: [\n      'Everything in Pro',\n      'MEV protection',\n      'Custom strategies',\n      'Dedicated support',\n      'Early access features',\n      'Personal consultation'\n    ],\n    limits: {\n      maxSnipeConfigs: -1,\n      maxDailyTrades: -1, // unlimited\n      realTrading: true,\n      mevProtection: true,\n      prioritySupport: true,\n      advancedAnalytics: true\n    }\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;;AAwEA;AACA,OAAO,MAAMA,kBAAoD,GAAG;EAClEC,IAAI,EAAE;IACJC,EAAE,EAAE,MAAM;IACVC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE,CACR,cAAc,EACd,gBAAgB,EAChB,iBAAiB,EACjB,iBAAiB,EACjB,kBAAkB,CACnB;IACDC,MAAM,EAAE;MACNC,eAAe,EAAE,CAAC;MAClBC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE,KAAK;MACpBC,eAAe,EAAE,KAAK;MACtBC,iBAAiB,EAAE;IACrB;EACF,CAAC;EACDC,GAAG,EAAE;IACHb,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE,CACR,sBAAsB,EACtB,mBAAmB,EACnB,oBAAoB,EACpB,kBAAkB,EAClB,eAAe,EACf,gBAAgB,CACjB;IACDC,MAAM,EAAE;MACNC,eAAe,EAAE,CAAC,CAAC;MAAE;MACrBC,cAAc,EAAE,GAAG;MACnBC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE,KAAK;MACpBC,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE;IACrB;EACF,CAAC;EACDE,OAAO,EAAE;IACPd,EAAE,EAAE,SAAS;IACbC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE,CACR,mBAAmB,EACnB,gBAAgB,EAChB,mBAAmB,EACnB,mBAAmB,EACnB,uBAAuB,EACvB,uBAAuB,CACxB;IACDC,MAAM,EAAE;MACNC,eAAe,EAAE,CAAC,CAAC;MACnBC,cAAc,EAAE,CAAC,CAAC;MAAE;MACpBC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE,IAAI;MACnBC,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}