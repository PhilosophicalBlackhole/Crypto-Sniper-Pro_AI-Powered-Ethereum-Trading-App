{"ast":null,"code":"/**\n * Button (shadcn-compatible)\n * - Exports Button component and buttonVariants for consistent styling.\n * - This matches the expected API so other components can import { buttonVariants }.\n */import*as React from'react';import{Slot}from'@radix-ui/react-slot';import{cva}from'class-variance-authority';import{cn}from'@/lib/utils';/**\n * buttonVariants\n * Style variants/sizes for Button using class-variance-authority.\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const buttonVariants=cva('inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-400 disabled:pointer-events-none disabled:opacity-50',{variants:{variant:{default:'bg-slate-900 text-white hover:bg-slate-900/90',destructive:'bg-red-600 text-white hover:bg-red-600/90',outline:'border border-slate-700 text-slate-200 hover:bg-slate-800/40',secondary:'bg-slate-700 text-white hover:bg-slate-700/90',ghost:'hover:bg-slate-800 hover:text-slate-100',link:'text-blue-400 underline-offset-4 hover:underline'},size:{default:'h-10 px-4 py-2',sm:'h-9 px-3 rounded-md',lg:'h-11 px-8 rounded-md',icon:'h-10 w-10'}},defaultVariants:{variant:'default',size:'default'}});/**\n * ButtonProps\n * - Extends native button props with variant/size and \"asChild\" support.\n *//**\n * Button\n * - Polymorphic button using Radix Slot when asChild is true.\n */export const Button=/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{className,variant,size,asChild=false,...props}=_ref;const Comp=asChild?Slot:'button';return/*#__PURE__*/_jsx(Comp,{ref:ref,className:cn(buttonVariants({variant,size}),className),...props});});Button.displayName='Button';export default Button;","map":{"version":3,"names":["React","Slot","cva","cn","jsx","_jsx","buttonVariants","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","forwardRef","_ref","ref","className","asChild","props","Comp","displayName"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/components/ui/button.tsx"],"sourcesContent":["/**\n * Button (shadcn-compatible)\n * - Exports Button component and buttonVariants for consistent styling.\n * - This matches the expected API so other components can import { buttonVariants }.\n */\n\nimport * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\n\n/**\n * buttonVariants\n * Style variants/sizes for Button using class-variance-authority.\n */\nexport const buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-400 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-slate-900 text-white hover:bg-slate-900/90',\n        destructive: 'bg-red-600 text-white hover:bg-red-600/90',\n        outline: 'border border-slate-700 text-slate-200 hover:bg-slate-800/40',\n        secondary: 'bg-slate-700 text-white hover:bg-slate-700/90',\n        ghost: 'hover:bg-slate-800 hover:text-slate-100',\n        link: 'text-blue-400 underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 px-3 rounded-md',\n        lg: 'h-11 px-8 rounded-md',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\n/**\n * ButtonProps\n * - Extends native button props with variant/size and \"asChild\" support.\n */\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  /** Render as child (for polymorphic Slot usage) */\n  asChild?: boolean\n}\n\n/**\n * Button\n * - Polymorphic button using Radix Slot when asChild is true.\n */\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        ref={ref}\n        className={cn(buttonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = 'Button'\n\nexport default Button"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAEA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,OAASC,IAAI,KAAQ,sBAAsB,CAC3C,OAASC,GAAG,KAA2B,0BAA0B,CACjE,OAASC,EAAE,KAAQ,aAAa,CAEhC;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,yBAIA,MAAO,MAAM,CAAAC,cAAc,CAAGJ,GAAG,CAC/B,0OAA0O,CAC1O,CACEK,QAAQ,CAAE,CACRC,OAAO,CAAE,CACPC,OAAO,CAAE,+CAA+C,CACxDC,WAAW,CAAE,2CAA2C,CACxDC,OAAO,CAAE,8DAA8D,CACvEC,SAAS,CAAE,+CAA+C,CAC1DC,KAAK,CAAE,yCAAyC,CAChDC,IAAI,CAAE,kDACR,CAAC,CACDC,IAAI,CAAE,CACJN,OAAO,CAAE,gBAAgB,CACzBO,EAAE,CAAE,qBAAqB,CACzBC,EAAE,CAAE,sBAAsB,CAC1BC,IAAI,CAAE,WACR,CACF,CAAC,CACDC,eAAe,CAAE,CACfX,OAAO,CAAE,SAAS,CAClBO,IAAI,CAAE,SACR,CACF,CACF,CAAC,CAED;AACA;AACA;AACA,GAQA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAK,MAAM,cAAGpB,KAAK,CAACqB,UAAU,CACpC,CAAAC,IAAA,CAA0DC,GAAG,GAAK,IAAjE,CAAEC,SAAS,CAAEhB,OAAO,CAAEO,IAAI,CAAEU,OAAO,CAAG,KAAK,CAAE,GAAGC,KAAM,CAAC,CAAAJ,IAAA,CACtD,KAAM,CAAAK,IAAI,CAAGF,OAAO,CAAGxB,IAAI,CAAG,QAAQ,CACtC,mBACEI,IAAA,CAACsB,IAAI,EACHJ,GAAG,CAAEA,GAAI,CACTC,SAAS,CAAErB,EAAE,CAACG,cAAc,CAAC,CAAEE,OAAO,CAAEO,IAAK,CAAC,CAAC,CAAES,SAAS,CAAE,IACxDE,KAAK,CACV,CAAC,CAEN,CACF,CAAC,CACDN,MAAM,CAACQ,WAAW,CAAG,QAAQ,CAE7B,cAAe,CAAAR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}