{"ast":null,"code":"/**\n * Custom hook for wallet connection and management\n */import{useState,useEffect,useCallback}from'react';export function useWallet(){const[walletState,setWalletState]=useState({isConnected:false,address:null,balance:'0',chainId:null,isConnecting:false,error:null});const[demoMode,setDemoMode]=useState(false);const updateBalance=useCallback(async address=>{try{if(window.ethereum){const balance=await window.ethereum.request({method:'eth_getBalance',params:[address,'latest']});const balanceInEth=(parseInt(balance,16)/1e18).toFixed(4);setWalletState(prev=>({...prev,balance:balanceInEth}));}}catch(error){console.error('Error fetching balance:',error);}},[]);const connectDemoWallet=useCallback(()=>{setWalletState(prev=>({...prev,isConnecting:true,error:null}));// Simulate connection delay\nsetTimeout(()=>{setWalletState({isConnected:true,address:'0x742d35Cc6634C0532925a3b8D',balance:'2.4567',chainId:1,isConnecting:false,error:null});setDemoMode(true);},1500);},[]);const connectWallet=useCallback(async()=>{if(!window.ethereum){// Instead of showing error, offer demo mode\nconnectDemoWallet();return;}setWalletState(prev=>({...prev,isConnecting:true,error:null}));try{const accounts=await window.ethereum.request({method:'eth_requestAccounts'});const chainId=await window.ethereum.request({method:'eth_chainId'});if(accounts.length>0){const address=accounts[0];setWalletState(prev=>({...prev,isConnected:true,address,chainId:parseInt(chainId,16),isConnecting:false}));await updateBalance(address);}}catch(error){setWalletState(prev=>({...prev,isConnecting:false,error:error.message||'Failed to connect wallet'}));}},[updateBalance]);const disconnectWallet=useCallback(()=>{setWalletState({isConnected:false,address:null,balance:'0',chainId:null,isConnecting:false,error:null});setDemoMode(false);},[]);useEffect(()=>{if(window.ethereum){const handleAccountsChanged=accounts=>{if(accounts.length===0){disconnectWallet();}else{setWalletState(prev=>({...prev,address:accounts[0]}));updateBalance(accounts[0]);}};const handleChainChanged=chainId=>{setWalletState(prev=>({...prev,chainId:parseInt(chainId,16)}));};window.ethereum.on('accountsChanged',handleAccountsChanged);window.ethereum.on('chainChanged',handleChainChanged);return()=>{window.ethereum.removeListener('accountsChanged',handleAccountsChanged);window.ethereum.removeListener('chainChanged',handleChainChanged);};}},[disconnectWallet,updateBalance]);return{...walletState,connectWallet,disconnectWallet,updateBalance:()=>walletState.address&&updateBalance(walletState.address),demoMode};}","map":{"version":3,"names":["useState","useEffect","useCallback","useWallet","walletState","setWalletState","isConnected","address","balance","chainId","isConnecting","error","demoMode","setDemoMode","updateBalance","window","ethereum","request","method","params","balanceInEth","parseInt","toFixed","prev","console","connectDemoWallet","setTimeout","connectWallet","accounts","length","message","disconnectWallet","handleAccountsChanged","handleChainChanged","on","removeListener"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/hooks/useWallet.ts"],"sourcesContent":["/**\n * Custom hook for wallet connection and management\n */\n\nimport { useState, useEffect, useCallback } from 'react';\n\nexport interface WalletState {\n  isConnected: boolean;\n  address: string | null;\n  balance: string;\n  chainId: number | null;\n  isConnecting: boolean;\n  error: string | null;\n}\n\nexport function useWallet() {\n  const [walletState, setWalletState] = useState<WalletState>({\n    isConnected: false,\n    address: null,\n    balance: '0',\n    chainId: null,\n    isConnecting: false,\n    error: null,\n  });\n\n  const [demoMode, setDemoMode] = useState(false);\n\n  const updateBalance = useCallback(async (address: string) => {\n    try {\n      if (window.ethereum) {\n        const balance = await window.ethereum.request({\n          method: 'eth_getBalance',\n          params: [address, 'latest'],\n        });\n        const balanceInEth = (parseInt(balance, 16) / 1e18).toFixed(4);\n        setWalletState(prev => ({ ...prev, balance: balanceInEth }));\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  }, []);\n\n  const connectDemoWallet = useCallback(() => {\n    setWalletState(prev => ({ ...prev, isConnecting: true, error: null }));\n    \n    // Simulate connection delay\n    setTimeout(() => {\n      setWalletState({\n        isConnected: true,\n        address: '0x742d35Cc6634C0532925a3b8D',\n        balance: '2.4567',\n        chainId: 1,\n        isConnecting: false,\n        error: null,\n      });\n      setDemoMode(true);\n    }, 1500);\n  }, []);\n\n  const connectWallet = useCallback(async () => {\n    if (!window.ethereum) {\n      // Instead of showing error, offer demo mode\n      connectDemoWallet();\n      return;\n    }\n\n    setWalletState(prev => ({ ...prev, isConnecting: true, error: null }));\n\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      const chainId = await window.ethereum.request({\n        method: 'eth_chainId',\n      });\n\n      if (accounts.length > 0) {\n        const address = accounts[0];\n        setWalletState(prev => ({\n          ...prev,\n          isConnected: true,\n          address,\n          chainId: parseInt(chainId, 16),\n          isConnecting: false,\n        }));\n        await updateBalance(address);\n      }\n    } catch (error: any) {\n      setWalletState(prev => ({\n        ...prev,\n        isConnecting: false,\n        error: error.message || 'Failed to connect wallet',\n      }));\n    }\n  }, [updateBalance]);\n\n  const disconnectWallet = useCallback(() => {\n    setWalletState({\n      isConnected: false,\n      address: null,\n      balance: '0',\n      chainId: null,\n      isConnecting: false,\n      error: null,\n    });\n    setDemoMode(false);\n  }, []);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          setWalletState(prev => ({ ...prev, address: accounts[0] }));\n          updateBalance(accounts[0]);\n        }\n      };\n\n      const handleChainChanged = (chainId: string) => {\n        setWalletState(prev => ({ \n          ...prev, \n          chainId: parseInt(chainId, 16) \n        }));\n      };\n\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', handleChainChanged);\n\n      return () => {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      };\n    }\n  }, [disconnectWallet, updateBalance]);\n\n  return {\n    ...walletState,\n    connectWallet,\n    disconnectWallet,\n    updateBalance: () => walletState.address && updateBalance(walletState.address),\n    demoMode,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}