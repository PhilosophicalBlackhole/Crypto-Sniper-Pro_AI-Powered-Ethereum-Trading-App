{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tpars\\\\source\\\\repos\\\\Crypto Sniper Pro_ AI-Powered Ethereum Trading App\\\\src\\\\components\\\\AddSnipeForm.tsx\",\n  _s = $RefreshSig$();\n/**\n * Form component for adding new snipe configurations\n * - Now gated to Ethereum Mainnet for submissions with a clear inline helper and \"Switch to Mainnet\" action.\n */\n\nimport React, { useState } from 'react';\nimport { Plus, Target, AlertTriangle, Info } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Switch } from './ui/switch';\nimport { HelpTooltip } from './HelpTooltip';\nimport { useNetworkStatus } from '../hooks/useNetworkStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * AddSnipeForm - creates a new snipe target.\n * Submission is restricted to Mainnet for safety and transparency.\n */\nexport function AddSnipeForm({\n  onAdd\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Network gating for production trades\n  const {\n    isMainnet,\n    networkName,\n    switchToMainnet\n  } = useNetworkStatus();\n  const [formData, setFormData] = useState({\n    tokenAddress: '',\n    targetPrice: 0.001,\n    maxPrice: 0.002,\n    amount: 0.05,\n    slippage: 12,\n    gasPrice: 25,\n    maxGas: 300000,\n    enabled: false,\n    gasSettings: {\n      mode: 'auto',\n      maxGasPrice: 100,\n      priorityFee: 2,\n      executionTimeout: 120,\n      retryCount: 3\n    },\n    slippageSettings: {\n      mode: 'adaptive',\n      baseSlippage: 10,\n      maxSlippage: 25,\n      liquidityThreshold: 100000,\n      volatilityMultiplier: 1.5\n    },\n    autoSell: {\n      enabled: false,\n      profitTarget: 50,\n      stopLoss: -20,\n      trailingStop: {\n        enabled: false,\n        percentage: 5,\n        activationPrice: 20\n      },\n      partialSelling: {\n        enabled: false,\n        percentages: [25, 50],\n        priceTargets: [20, 50]\n      }\n    },\n    batchSettings: {\n      enabled: false,\n      maxBatchSize: 3,\n      batchDelay: 200,\n      nonceManagement: 'auto',\n      priority: 5\n    }\n  });\n\n  /** Validate hex address */\n  const validateAddress = address => {\n    return address.startsWith('0x') && address.length === 42;\n  };\n\n  /** Submit handler - gated to Mainnet */\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isMainnet) {\n      // Safety guard; should be disabled by UI, but keep logic safe\n      return;\n    }\n    if (!formData.tokenAddress || !formData.tokenAddress.startsWith('0x')) {\n      alert('Please enter a valid token address');\n      return;\n    }\n    onAdd(formData);\n    setFormData({\n      tokenAddress: '',\n      targetPrice: 0.001,\n      maxPrice: 0.002,\n      amount: 0.05,\n      slippage: 12,\n      gasPrice: 25,\n      maxGas: 300000,\n      enabled: false,\n      gasSettings: {\n        mode: 'auto',\n        maxGasPrice: 100,\n        priorityFee: 2,\n        executionTimeout: 120,\n        retryCount: 3\n      },\n      slippageSettings: {\n        mode: 'adaptive',\n        baseSlippage: 10,\n        maxSlippage: 25,\n        liquidityThreshold: 100000,\n        volatilityMultiplier: 1.5\n      },\n      autoSell: {\n        enabled: false,\n        profitTarget: 50,\n        stopLoss: -20,\n        trailingStop: {\n          enabled: false,\n          percentage: 5,\n          activationPrice: 20\n        },\n        partialSelling: {\n          enabled: false,\n          percentages: [25, 50],\n          priceTargets: [20, 50]\n        }\n      },\n      batchSettings: {\n        enabled: false,\n        maxBatchSize: 3,\n        batchDelay: 200,\n        nonceManagement: 'auto',\n        priority: 5\n      }\n    });\n    setIsOpen(false);\n  };\n  if (!isOpen) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"bg-gradient-to-r from-blue-900/50 to-purple-900/50 border-blue-500/50 border-dashed border-2\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-blue-600 rounded-full w-12 h-12 mx-auto flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"h-6 w-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white font-semibold mb-1\",\n              children: \"Add Snipe Target\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-slate-400 text-sm\",\n              children: \"Configure a token to monitor and snipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsOpen(true),\n            className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3\",\n            children: [/*#__PURE__*/_jsxDEV(Target, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), \"Create New Target\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), !isMainnet && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                className: \"h-4 w-4 text-amber-400 mt-0.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-amber-300 text-xs\",\n                children: [\"You are connected to \", networkName || 'a test network', \". Live sniping is only available on Ethereum Mainnet.\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline\",\n                    size: \"sm\",\n                    onClick: switchToMainnet,\n                    className: \"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\",\n                    children: \"Switch to Mainnet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"bg-slate-900/30 backdrop-blur-sm border-slate-700/30\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"flex items-center gap-2 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Target, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), \"New Snipe Configuration\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [!isMainnet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"h-4 w-4 text-amber-400 mt-0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-amber-200 text-sm\",\n            children: [\"You are on \", networkName || 'a test network', \". To create live sniping targets, switch to Ethereum Mainnet.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline\",\n                size: \"sm\",\n                onClick: switchToMainnet,\n                className: \"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\",\n                children: \"Switch to Mainnet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-1 text-amber-300/90\",\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  className: \"h-3 w-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs\",\n                  children: \"Demo/testing is available on the TESTNET tab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"tokenAddress\",\n            className: \"text-slate-300\",\n            children: \"Token Address *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"tokenAddress\",\n            type: \"text\",\n            placeholder: \"0x...\",\n            value: formData.tokenAddress,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              tokenAddress: e.target.value\n            })),\n            className: `bg-slate-800 border-slate-600 text-white ${formData.tokenAddress && !validateAddress(formData.tokenAddress) ? 'border-red-500' : ''}`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), formData.tokenAddress && !validateAddress(formData.tokenAddress) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-400 text-xs mt-1\",\n            children: \"Please enter a valid Ethereum address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"targetPrice\",\n              className: \"text-slate-300\",\n              children: \"Target Price (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"targetPrice\",\n              type: \"number\",\n              step: \"0.00000001\",\n              value: formData.targetPrice,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                targetPrice: parseFloat(e.target.value)\n              })),\n              className: \"bg-slate-800 border-slate-600 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"maxPrice\",\n              className: \"text-slate-300\",\n              children: \"Max Price (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"maxPrice\",\n              type: \"number\",\n              step: \"0.00000001\",\n              value: formData.maxPrice,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                maxPrice: parseFloat(e.target.value)\n              })),\n              className: \"bg-slate-800 border-slate-600 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"amount\",\n              className: \"text-slate-300\",\n              children: \"Amount (ETH)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"amount\",\n              type: \"number\",\n              step: \"0.01\",\n              value: formData.amount,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                amount: parseFloat(e.target.value)\n              })),\n              className: \"bg-slate-800 border-slate-600 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"slippage\",\n              className: \"text-slate-300\",\n              children: \"Slippage (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"slippage\",\n              type: \"number\",\n              step: \"0.1\",\n              min: \"0.1\",\n              max: \"50\",\n              value: formData.slippage,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                slippage: parseFloat(e.target.value)\n              })),\n              className: \"bg-slate-800 border-slate-600 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"gasPrice\",\n              className: \"text-slate-300\",\n              children: \"Gas Price (GWEI)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"gasPrice\",\n              type: \"number\",\n              step: \"1\",\n              min: \"1\",\n              value: formData.gasPrice,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                gasPrice: parseFloat(e.target.value)\n              })),\n              className: \"bg-slate-800 border-slate-600 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"maxGas\",\n              className: \"text-slate-300\",\n              children: \"Max Gas Limit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"maxGas\",\n              type: \"number\",\n              step: \"1000\",\n              min: \"21000\",\n              value: formData.maxGas,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                maxGas: parseInt(e.target.value)\n              })),\n              className: \"bg-slate-800 border-slate-600 text-white\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3 p-4 bg-slate-800 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              id: \"autoSellEnabled\",\n              checked: formData.autoSell.enabled,\n              onCheckedChange: checked => setFormData(prev => ({\n                ...prev,\n                autoSell: {\n                  ...prev.autoSell,\n                  enabled: checked\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"autoSellEnabled\",\n              className: \"text-slate-300\",\n              children: \"Enable Auto-Sell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HelpTooltip, {\n              title: \"Auto-Sell\",\n              content: \"Enable automatic take-profit/stop-loss logic after purchase.\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), formData.autoSell.enabled && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"profitTarget\",\n                className: \"text-slate-300\",\n                children: \"Profit Target (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"profitTarget\",\n                type: \"number\",\n                step: \"1\",\n                value: formData.autoSell.profitTarget,\n                onChange: e => setFormData(prev => ({\n                  ...prev,\n                  autoSell: {\n                    ...prev.autoSell,\n                    profitTarget: parseFloat(e.target.value)\n                  }\n                })),\n                className: \"bg-slate-700 border-slate-600 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"stopLoss\",\n                className: \"text-slate-300\",\n                children: \"Stop Loss (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"stopLoss\",\n                type: \"number\",\n                step: \"1\",\n                value: formData.autoSell.stopLoss,\n                onChange: e => setFormData(prev => ({\n                  ...prev,\n                  autoSell: {\n                    ...prev.autoSell,\n                    stopLoss: parseFloat(e.target.value)\n                  }\n                })),\n                className: \"bg-slate-700 border-slate-600 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            id: \"enabled\",\n            checked: formData.enabled,\n            onCheckedChange: checked => setFormData(prev => ({\n              ...prev,\n              enabled: checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"enabled\",\n            className: \"text-slate-300\",\n            children: \"Start Sniping Immediately\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: `flex-1 ${isMainnet ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-600 cursor-not-allowed opacity-60'}`,\n            disabled: !isMainnet || !validateAddress(formData.tokenAddress),\n            title: isMainnet ? undefined : 'Switch to Ethereum Mainnet to create live sniping targets',\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), isMainnet ? 'Add Snipe Target' : 'Switch to Mainnet to Add']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => setIsOpen(false),\n            variant: \"outline\",\n            className: \"bg-transparent border-slate-600 text-slate-300\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(AddSnipeForm, \"2zaPAurU51fMXKOzbCxYJhq7SYA=\", false, function () {\n  return [useNetworkStatus];\n});\n_c = AddSnipeForm;\nvar _c;\n$RefreshReg$(_c, \"AddSnipeForm\");","map":{"version":3,"names":["React","useState","Plus","Target","AlertTriangle","Info","Card","CardContent","CardHeader","CardTitle","Button","Input","Label","Switch","HelpTooltip","useNetworkStatus","jsxDEV","_jsxDEV","AddSnipeForm","onAdd","_s","isOpen","setIsOpen","isMainnet","networkName","switchToMainnet","formData","setFormData","tokenAddress","targetPrice","maxPrice","amount","slippage","gasPrice","maxGas","enabled","gasSettings","mode","maxGasPrice","priorityFee","executionTimeout","retryCount","slippageSettings","baseSlippage","maxSlippage","liquidityThreshold","volatilityMultiplier","autoSell","profitTarget","stopLoss","trailingStop","percentage","activationPrice","partialSelling","percentages","priceTargets","batchSettings","maxBatchSize","batchDelay","nonceManagement","priority","validateAddress","address","startsWith","length","handleSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","size","onSubmit","htmlFor","id","type","placeholder","value","onChange","prev","target","required","step","parseFloat","min","max","parseInt","checked","onCheckedChange","title","content","disabled","undefined","_c","$RefreshReg$"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/components/AddSnipeForm.tsx"],"sourcesContent":["/**\n * Form component for adding new snipe configurations\n * - Now gated to Ethereum Mainnet for submissions with a clear inline helper and \"Switch to Mainnet\" action.\n */\n\nimport React, { useState } from 'react';\nimport { Plus, Target, AlertTriangle, Info } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Switch } from './ui/switch';\nimport { HelpTooltip } from './HelpTooltip';\nimport { SnipeConfig } from '../types/trading';\nimport { useNetworkStatus } from '../hooks/useNetworkStatus';\n\ninterface AddSnipeFormProps {\n  /** Handler to add a new snipe config; only used when on Mainnet */\n  onAdd: (config: Omit<SnipeConfig, 'id'>) => void;\n}\n\n/**\n * AddSnipeForm - creates a new snipe target.\n * Submission is restricted to Mainnet for safety and transparency.\n */\nexport function AddSnipeForm({ onAdd }: AddSnipeFormProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Network gating for production trades\n  const { isMainnet, networkName, switchToMainnet } = useNetworkStatus();\n\n  const [formData, setFormData] = useState({\n    tokenAddress: '',\n    targetPrice: 0.001,\n    maxPrice: 0.002,\n    amount: 0.05,\n    slippage: 12,\n    gasPrice: 25,\n    maxGas: 300000,\n    enabled: false,\n    gasSettings: {\n      mode: 'auto' as const,\n      maxGasPrice: 100,\n      priorityFee: 2,\n      executionTimeout: 120,\n      retryCount: 3,\n    },\n    slippageSettings: {\n      mode: 'adaptive' as const,\n      baseSlippage: 10,\n      maxSlippage: 25,\n      liquidityThreshold: 100000,\n      volatilityMultiplier: 1.5,\n    },\n    autoSell: {\n      enabled: false,\n      profitTarget: 50,\n      stopLoss: -20,\n      trailingStop: {\n        enabled: false,\n        percentage: 5,\n        activationPrice: 20,\n      },\n      partialSelling: {\n        enabled: false,\n        percentages: [25, 50],\n        priceTargets: [20, 50],\n      },\n    },\n    batchSettings: {\n      enabled: false,\n      maxBatchSize: 3,\n      batchDelay: 200,\n      nonceManagement: 'auto' as const,\n      priority: 5,\n    },\n  });\n\n  /** Validate hex address */\n  const validateAddress = (address: string) => {\n    return address.startsWith('0x') && address.length === 42;\n  };\n\n  /** Submit handler - gated to Mainnet */\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!isMainnet) {\n      // Safety guard; should be disabled by UI, but keep logic safe\n      return;\n    }\n\n    if (!formData.tokenAddress || !formData.tokenAddress.startsWith('0x')) {\n      alert('Please enter a valid token address');\n      return;\n    }\n\n    onAdd(formData);\n    setFormData({\n      tokenAddress: '',\n      targetPrice: 0.001,\n      maxPrice: 0.002,\n      amount: 0.05,\n      slippage: 12,\n      gasPrice: 25,\n      maxGas: 300000,\n      enabled: false,\n      gasSettings: {\n        mode: 'auto' as const,\n        maxGasPrice: 100,\n        priorityFee: 2,\n        executionTimeout: 120,\n        retryCount: 3,\n      },\n      slippageSettings: {\n        mode: 'adaptive' as const,\n        baseSlippage: 10,\n        maxSlippage: 25,\n        liquidityThreshold: 100000,\n        volatilityMultiplier: 1.5,\n      },\n      autoSell: {\n        enabled: false,\n        profitTarget: 50,\n        stopLoss: -20,\n        trailingStop: {\n          enabled: false,\n          percentage: 5,\n          activationPrice: 20,\n        },\n        partialSelling: {\n          enabled: false,\n          percentages: [25, 50],\n          priceTargets: [20, 50],\n        },\n      },\n      batchSettings: {\n        enabled: false,\n        maxBatchSize: 3,\n        batchDelay: 200,\n        nonceManagement: 'auto' as const,\n        priority: 5,\n      },\n    });\n    setIsOpen(false);\n  };\n\n  if (!isOpen) {\n    return (\n      <Card className=\"bg-gradient-to-r from-blue-900/50 to-purple-900/50 border-blue-500/50 border-dashed border-2\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center space-y-3\">\n            <div className=\"p-3 bg-blue-600 rounded-full w-12 h-12 mx-auto flex items-center justify-center\">\n              <Plus className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h3 className=\"text-white font-semibold mb-1\">Add Snipe Target</h3>\n              <p className=\"text-slate-400 text-sm\">Configure a token to monitor and snipe</p>\n            </div>\n            <Button\n              onClick={() => setIsOpen(true)}\n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3\"\n            >\n              <Target className=\"h-4 w-4 mr-2\" />\n              Create New Target\n            </Button>\n\n            {/* Inline hint when not on mainnet */}\n            {!isMainnet && (\n              <div className=\"mt-3 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg text-left\">\n                <div className=\"flex items-start gap-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-amber-400 mt-0.5\" />\n                  <div className=\"text-amber-300 text-xs\">\n                    You are connected to {networkName || 'a test network'}. Live sniping is only available on Ethereum Mainnet.\n                    <div className=\"mt-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={switchToMainnet}\n                        className=\"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\"\n                      >\n                        Switch to Mainnet\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"bg-slate-900/30 backdrop-blur-sm border-slate-700/30\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-white\">\n          <Target className=\"h-5 w-5\" />\n          New Snipe Configuration\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent>\n        {/* Network gating helper */}\n        {!isMainnet && (\n          <div className=\"mb-4 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg\">\n            <div className=\"flex items-start gap-2\">\n              <AlertTriangle className=\"h-4 w-4 text-amber-400 mt-0.5\" />\n              <div className=\"text-amber-200 text-sm\">\n                You are on {networkName || 'a test network'}. To create live sniping targets, switch to Ethereum Mainnet.\n                <div className=\"mt-2 flex items-center gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={switchToMainnet}\n                    className=\"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\"\n                  >\n                    Switch to Mainnet\n                  </Button>\n                  <div className=\"flex items-center gap-1 text-amber-300/90\">\n                    <Info className=\"h-3 w-3\" />\n                    <span className=\"text-xs\">Demo/testing is available on the TESTNET tab.</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"tokenAddress\" className=\"text-slate-300\">Token Address *</Label>\n            <Input\n              id=\"tokenAddress\"\n              type=\"text\"\n              placeholder=\"0x...\"\n              value={formData.tokenAddress}\n              onChange={(e) => setFormData(prev => ({ ...prev, tokenAddress: e.target.value }))}\n              className={`bg-slate-800 border-slate-600 text-white ${\n                formData.tokenAddress && !validateAddress(formData.tokenAddress) \n                  ? 'border-red-500' \n                  : ''\n              }`}\n              required\n            />\n            {formData.tokenAddress && !validateAddress(formData.tokenAddress) && (\n              <p className=\"text-red-400 text-xs mt-1\">Please enter a valid Ethereum address</p>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"targetPrice\" className=\"text-slate-300\">Target Price (USD)</Label>\n              <Input\n                id=\"targetPrice\"\n                type=\"number\"\n                step=\"0.00000001\"\n                value={formData.targetPrice}\n                onChange={(e) => setFormData(prev => ({ ...prev, targetPrice: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"maxPrice\" className=\"text-slate-300\">Max Price (USD)</Label>\n              <Input\n                id=\"maxPrice\"\n                type=\"number\"\n                step=\"0.00000001\"\n                value={formData.maxPrice}\n                onChange={(e) => setFormData(prev => ({ ...prev, maxPrice: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"amount\" className=\"text-slate-300\">Amount (ETH)</Label>\n              <Input\n                id=\"amount\"\n                type=\"number\"\n                step=\"0.01\"\n                value={formData.amount}\n                onChange={(e) => setFormData(prev => ({ ...prev, amount: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"slippage\" className=\"text-slate-300\">Slippage (%)</Label>\n              <Input\n                id=\"slippage\"\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"50\"\n                value={formData.slippage}\n                onChange={(e) => setFormData(prev => ({ ...prev, slippage: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"gasPrice\" className=\"text-slate-300\">Gas Price (GWEI)</Label>\n              <Input\n                id=\"gasPrice\"\n                type=\"number\"\n                step=\"1\"\n                min=\"1\"\n                value={formData.gasPrice}\n                onChange={(e) => setFormData(prev => ({ ...prev, gasPrice: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"maxGas\" className=\"text-slate-300\">Max Gas Limit</Label>\n              <Input\n                id=\"maxGas\"\n                type=\"number\"\n                step=\"1000\"\n                min=\"21000\"\n                value={formData.maxGas}\n                onChange={(e) => setFormData(prev => ({ ...prev, maxGas: parseInt(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-3 p-4 bg-slate-800 rounded-lg\">\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id=\"autoSellEnabled\"\n                checked={formData.autoSell.enabled}\n                onCheckedChange={(checked) => \n                  setFormData(prev => ({ \n                    ...prev, \n                    autoSell: { ...prev.autoSell, enabled: checked }\n                  }))\n                }\n              />\n              <Label htmlFor=\"autoSellEnabled\" className=\"text-slate-300\">Enable Auto-Sell</Label>\n              <HelpTooltip\n                title=\"Auto-Sell\"\n                content=\"Enable automatic take-profit/stop-loss logic after purchase.\"\n                size=\"sm\"\n              />\n            </div>\n            \n            {formData.autoSell.enabled && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"profitTarget\" className=\"text-slate-300\">Profit Target (%)</Label>\n                  <Input\n                    id=\"profitTarget\"\n                    type=\"number\"\n                    step=\"1\"\n                    value={formData.autoSell.profitTarget}\n                    onChange={(e) => \n                      setFormData(prev => ({ \n                        ...prev, \n                        autoSell: { ...prev.autoSell, profitTarget: parseFloat(e.target.value) }\n                      }))\n                    }\n                    className=\"bg-slate-700 border-slate-600 text-white\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"stopLoss\" className=\"text-slate-300\">Stop Loss (%)</Label>\n                  <Input\n                    id=\"stopLoss\"\n                    type=\"number\"\n                    step=\"1\"\n                    value={formData.autoSell.stopLoss}\n                    onChange={(e) => \n                      setFormData(prev => ({ \n                        ...prev, \n                        autoSell: { ...prev.autoSell, stopLoss: parseFloat(e.target.value) }\n                      }))\n                    }\n                    className=\"bg-slate-700 border-slate-600 text-white\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"enabled\"\n              checked={formData.enabled}\n              onCheckedChange={(checked) => setFormData(prev => ({ ...prev, enabled: checked }))}\n            />\n            <Label htmlFor=\"enabled\" className=\"text-slate-300\">Start Sniping Immediately</Label>\n          </div>\n\n          <div className=\"flex gap-2\">\n            <Button \n              type=\"submit\" \n              className={`flex-1 ${isMainnet ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-600 cursor-not-allowed opacity-60'}`}\n              disabled={!isMainnet || !validateAddress(formData.tokenAddress)}\n              title={isMainnet ? undefined : 'Switch to Ethereum Mainnet to create live sniping targets'}\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              {isMainnet ? 'Add Snipe Target' : 'Switch to Mainnet to Add'}\n            </Button>\n            <Button \n              type=\"button\" \n              onClick={() => setIsOpen(false)}\n              variant=\"outline\" \n              className=\"bg-transparent border-slate-600 text-slate-300\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}