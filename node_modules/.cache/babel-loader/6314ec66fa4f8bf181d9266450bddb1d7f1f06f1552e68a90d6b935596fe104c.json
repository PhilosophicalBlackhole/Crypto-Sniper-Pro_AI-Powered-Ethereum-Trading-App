{"ast":null,"code":"/**\n * Web3 service for blockchain interactions on testnets\n */// Basic Web3 functionality without external dependencies\nexport const TESTNETS={goerli:{chainId:5,rpcUrl:'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',explorerUrl:'https://goerli.etherscan.io',name:'Goerli Testnet',currency:'GoerliETH'},sepolia:{chainId:11155111,rpcUrl:'https://sepolia.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',explorerUrl:'https://sepolia.etherscan.io',name:'Sepolia Testnet',currency:'SepoliaETH'}};export class Web3Service{constructor(chainId){this.provider=void 0;this.chainConfig=void 0;this.chainConfig=Object.values(TESTNETS).find(config=>config.chainId===chainId)||TESTNETS.sepolia;}async connectProvider(){if(window.ethereum){this.provider=window.ethereum;return true;}return false;}async switchToTestnet(chainId){try{if(!window.ethereum)return false;const chainHex=`0x${chainId.toString(16)}`;// Try to switch to the network\ntry{await window.ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId:chainHex}]});return true;}catch(switchError){// Network not added, try to add it\nif(switchError.code===4902){const config=Object.values(TESTNETS).find(c=>c.chainId===chainId);if(!config)return false;await window.ethereum.request({method:'wallet_addEthereumChain',params:[{chainId:chainHex,chainName:config.name,rpcUrls:[config.rpcUrl],blockExplorerUrls:[config.explorerUrl],nativeCurrency:{name:config.currency,symbol:config.currency.replace('ETH','ETH'),decimals:18}}]});return true;}throw switchError;}}catch(error){console.error('Failed to switch network:',error);return false;}}async getBalance(address){try{if(!window.ethereum)return'0';const balance=await window.ethereum.request({method:'eth_getBalance',params:[address,'latest']});// Convert from Wei to ETH\nconst balanceInEth=parseInt(balance,16)/1e18;return balanceInEth.toFixed(6);}catch(error){console.error('Error fetching balance:',error);return'0';}}async getTokenBalance(tokenAddress,walletAddress){try{if(!window.ethereum)return'0';// ERC-20 balanceOf function signature\nconst data=`0x70a08231000000000000000000000000${walletAddress.slice(2)}`;const result=await window.ethereum.request({method:'eth_call',params:[{to:tokenAddress,data:data},'latest']});const balance=parseInt(result,16);return(balance/1e18).toFixed(6);}catch(error){console.error('Error fetching token balance:',error);return'0';}}async sendTestTransaction(to,amount){try{if(!window.ethereum)throw new Error('No wallet connected');const accounts=await window.ethereum.request({method:'eth_requestAccounts'});const txHash=await window.ethereum.request({method:'eth_sendTransaction',params:[{from:accounts[0],to:to,value:`0x${(parseFloat(amount)*1e18).toString(16)}`,gas:'0x5208'// 21000\n}]});return txHash;}catch(error){console.error('Transaction failed:',error);throw error;}}async getTransactionReceipt(txHash){try{if(!window.ethereum)return null;return await window.ethereum.request({method:'eth_getTransactionReceipt',params:[txHash]});}catch(error){console.error('Error fetching transaction receipt:',error);return null;}}getExplorerUrl(txHash){return`${this.chainConfig.explorerUrl}/tx/${txHash}`;}getAddressUrl(address){return`${this.chainConfig.explorerUrl}/address/${address}`;}getChainConfig(){return this.chainConfig;}}","map":{"version":3,"names":["TESTNETS","goerli","chainId","rpcUrl","explorerUrl","name","currency","sepolia","Web3Service","constructor","provider","chainConfig","Object","values","find","config","connectProvider","window","ethereum","switchToTestnet","chainHex","toString","request","method","params","switchError","code","c","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","replace","decimals","error","console","getBalance","address","balance","balanceInEth","parseInt","toFixed","getTokenBalance","tokenAddress","walletAddress","data","slice","result","to","sendTestTransaction","amount","Error","accounts","txHash","from","value","parseFloat","gas","getTransactionReceipt","getExplorerUrl","getAddressUrl","getChainConfig"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/services/web3.ts"],"sourcesContent":["/**\n * Web3 service for blockchain interactions on testnets\n */\n\n// Basic Web3 functionality without external dependencies\nexport interface Web3Config {\n  chainId: number;\n  rpcUrl: string;\n  explorerUrl: string;\n  name: string;\n  currency: string;\n}\n\nexport const TESTNETS: Record<string, Web3Config> = {\n  goerli: {\n    chainId: 5,\n    rpcUrl: 'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',\n    explorerUrl: 'https://goerli.etherscan.io',\n    name: 'Goerli Testnet',\n    currency: 'GoerliETH',\n  },\n  sepolia: {\n    chainId: 11155111,\n    rpcUrl: 'https://sepolia.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',\n    explorerUrl: 'https://sepolia.etherscan.io',\n    name: 'Sepolia Testnet',\n    currency: 'SepoliaETH',\n  },\n};\n\nexport class Web3Service {\n  private provider: any;\n  private chainConfig: Web3Config;\n\n  constructor(chainId: number) {\n    this.chainConfig = Object.values(TESTNETS).find(config => config.chainId === chainId) || TESTNETS.sepolia;\n  }\n\n  async connectProvider() {\n    if (window.ethereum) {\n      this.provider = window.ethereum;\n      return true;\n    }\n    return false;\n  }\n\n  async switchToTestnet(chainId: number): Promise<boolean> {\n    try {\n      if (!window.ethereum) return false;\n\n      const chainHex = `0x${chainId.toString(16)}`;\n      \n      // Try to switch to the network\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: chainHex }],\n        });\n        return true;\n      } catch (switchError: any) {\n        // Network not added, try to add it\n        if (switchError.code === 4902) {\n          const config = Object.values(TESTNETS).find(c => c.chainId === chainId);\n          if (!config) return false;\n\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: chainHex,\n                chainName: config.name,\n                rpcUrls: [config.rpcUrl],\n                blockExplorerUrls: [config.explorerUrl],\n                nativeCurrency: {\n                  name: config.currency,\n                  symbol: config.currency.replace('ETH', 'ETH'),\n                  decimals: 18,\n                },\n              },\n            ],\n          });\n          return true;\n        }\n        throw switchError;\n      }\n    } catch (error) {\n      console.error('Failed to switch network:', error);\n      return false;\n    }\n  }\n\n  async getBalance(address: string): Promise<string> {\n    try {\n      if (!window.ethereum) return '0';\n      \n      const balance = await window.ethereum.request({\n        method: 'eth_getBalance',\n        params: [address, 'latest'],\n      });\n      \n      // Convert from Wei to ETH\n      const balanceInEth = parseInt(balance, 16) / 1e18;\n      return balanceInEth.toFixed(6);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      return '0';\n    }\n  }\n\n  async getTokenBalance(tokenAddress: string, walletAddress: string): Promise<string> {\n    try {\n      if (!window.ethereum) return '0';\n\n      // ERC-20 balanceOf function signature\n      const data = `0x70a08231000000000000000000000000${walletAddress.slice(2)}`;\n      \n      const result = await window.ethereum.request({\n        method: 'eth_call',\n        params: [\n          {\n            to: tokenAddress,\n            data: data,\n          },\n          'latest',\n        ],\n      });\n\n      const balance = parseInt(result, 16);\n      return (balance / 1e18).toFixed(6);\n    } catch (error) {\n      console.error('Error fetching token balance:', error);\n      return '0';\n    }\n  }\n\n  async sendTestTransaction(to: string, amount: string): Promise<string> {\n    try {\n      if (!window.ethereum) throw new Error('No wallet connected');\n\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      const txHash = await window.ethereum.request({\n        method: 'eth_sendTransaction',\n        params: [\n          {\n            from: accounts[0],\n            to: to,\n            value: `0x${(parseFloat(amount) * 1e18).toString(16)}`,\n            gas: '0x5208', // 21000\n          },\n        ],\n      });\n\n      return txHash;\n    } catch (error) {\n      console.error('Transaction failed:', error);\n      throw error;\n    }\n  }\n\n  async getTransactionReceipt(txHash: string) {\n    try {\n      if (!window.ethereum) return null;\n\n      return await window.ethereum.request({\n        method: 'eth_getTransactionReceipt',\n        params: [txHash],\n      });\n    } catch (error) {\n      console.error('Error fetching transaction receipt:', error);\n      return null;\n    }\n  }\n\n  getExplorerUrl(txHash: string): string {\n    return `${this.chainConfig.explorerUrl}/tx/${txHash}`;\n  }\n\n  getAddressUrl(address: string): string {\n    return `${this.chainConfig.explorerUrl}/address/${address}`;\n  }\n\n  getChainConfig(): Web3Config {\n    return this.chainConfig;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}