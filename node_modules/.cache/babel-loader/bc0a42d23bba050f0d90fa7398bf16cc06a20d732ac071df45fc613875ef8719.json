{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tpars\\\\source\\\\repos\\\\Crypto Sniper Pro_ AI-Powered Ethereum Trading App\\\\src\\\\components\\\\AuthModal.tsx\",\n  _s = $RefreshSig$();\n/**\n * Authentication modal component with login and signup functionality\n * - Uses Supabase (managed) via authService when configured, otherwise device-local demo auth.\n * - Includes device-local reset flow and Supabase email reset/magic link when available.\n * - Explicit autocomplete/name attributes to reduce unintended autofill.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { X, Eye, EyeOff, User as UserIcon, Lock, Mail, Link as LinkIcon, KeyRound } from 'lucide-react';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Map AuthUser to app user shape.\n */\nfunction toUser(u) {\n  var _u$avatar;\n  return {\n    id: u.id,\n    name: u.name,\n    email: u.email,\n    plan: u.plan,\n    avatar: (_u$avatar = u.avatar) !== null && _u$avatar !== void 0 ? _u$avatar : null\n  };\n}\n\n/**\n * AuthModal component\n */\nexport function AuthModal({\n  isOpen,\n  onClose,\n  defaultTab,\n  onSuccess\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Managed auth available?\n  const [managed, setManaged] = useState(false);\n  useEffect(() => {\n    setManaged(authService.isManaged());\n  }, []);\n\n  // Forms\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: '',\n    rememberMe: true\n  });\n  const [signupForm, setSignupForm] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    plan: 'free'\n  });\n\n  // Local reset (demo) UI\n  const [showReset, setShowReset] = useState(false);\n  const [resetEmail, setResetEmail] = useState('');\n  const [resetNewPass, setResetNewPass] = useState('');\n  const [resetConfirmPass, setResetConfirmPass] = useState('');\n  const [resetError, setResetError] = useState('');\n  const [resetStep, setResetStep] = useState(1);\n  if (!isOpen) return null;\n\n  /**\n   * Handle login using managed auth when available, else demo fallback.\n   */\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      if (!loginForm.email || !loginForm.password) throw new Error('Please fill in all fields');\n      const u = await authService.signIn(loginForm.email.trim(), loginForm.password);\n      if (loginForm.rememberMe) {\n        localStorage.setItem('cryptosniper_remember_me', 'true');\n      } else {\n        localStorage.removeItem('cryptosniper_remember_me');\n      }\n      onSuccess(toUser(u));\n      setLoginForm({\n        email: '',\n        password: '',\n        rememberMe: true\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Handle signup using managed auth when available, else demo fallback.\n   */\n  const handleSignup = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      if (!signupForm.name || !signupForm.email || !signupForm.password) {\n        throw new Error('Please fill in all required fields');\n      }\n      if (signupForm.password !== signupForm.confirmPassword) {\n        throw new Error('Passwords do not match');\n      }\n      if (signupForm.password.length < 6) {\n        throw new Error('Password must be at least 6 characters long');\n      }\n      const {\n        user,\n        message\n      } = await authService.signUp(signupForm.name.trim(), signupForm.email.trim(), signupForm.password, signupForm.plan);\n      if (user) {\n        onSuccess(toUser(user));\n      } else if (message) {\n        setError(message);\n      }\n      setSignupForm({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        plan: 'free'\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Signup failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Send magic link (managed only).\n   */\n  const handleMagicLink = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      if (!loginForm.email) throw new Error('Enter your email to receive a magic link');\n      const res = await authService.sendMagicLink(loginForm.email.trim());\n      setError(res.message);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to send magic link');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Begin reset. Managed: send email reset; Demo: move to step 2 (set new password).\n   */\n  const handleBeginReset = async e => {\n    e.preventDefault();\n    setResetError('');\n    if (!resetEmail) {\n      setResetError('Please enter your email');\n      return;\n    }\n    if (managed) {\n      try {\n        const res = await authService.resetPassword(resetEmail.trim());\n        setShowReset(false);\n        setActiveTab('login');\n        setError(res.message || 'Password reset link sent.');\n      } catch (err) {\n        setResetError(err instanceof Error ? err.message : 'Failed to send reset email');\n      }\n      return;\n    }\n    setResetStep(2);\n  };\n\n  /**\n   * Complete reset in demo mode by updating the stored local hash.\n   */\n  const handleCompleteReset = e => {\n    e.preventDefault();\n    setResetError('');\n    if (!resetNewPass || resetNewPass.length < 6) {\n      setResetError('Password must be at least 6 characters long');\n      return;\n    }\n    if (resetNewPass !== resetConfirmPass) {\n      setResetError('Passwords do not match');\n      return;\n    }\n    try {\n      const key = `cryptosniper_creds_${resetEmail.trim().toLowerCase()}`;\n      const stored = localStorage.getItem(key);\n      if (!stored) {\n        setResetError('Account not found on this device.');\n        return;\n      }\n      // lightweight hash (demo)\n      let hash = 0;\n      for (let i = 0; i < resetNewPass.length; i++) {\n        const c = resetNewPass.charCodeAt(i);\n        hash = (hash << 5) - hash + c;\n        hash |= 0;\n      }\n      const creds = JSON.parse(stored);\n      const updated = {\n        ...creds,\n        hashedPassword: hash.toString(36)\n      };\n      localStorage.setItem(key, JSON.stringify(updated));\n      setShowReset(false);\n      setResetEmail('');\n      setResetNewPass('');\n      setResetConfirmPass('');\n      setResetStep(1);\n      setActiveTab('login');\n      setError('Password updated. Please sign in.');\n    } catch {\n      setResetError('Failed to update password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-md bg-slate-900 border-slate-700\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          size: \"sm\",\n          onClick: onClose,\n          className: \"absolute top-2 right-2 h-8 w-8 p-0 text-slate-400 hover:text-white\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-white text-center\",\n          children: \"Welcome to CryptoSniper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n          className: \"text-center\",\n          children: activeTab === 'login' ? 'Sign in to your account' : 'Create a new account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-[11px] text-slate-500 mb-3\",\n          children: managed ? 'Managed Auth enabled (Supabase). Cross-device sign-in and email recovery available.' : 'Demo mode: accounts are stored on this device only. Use the same browser to sign back in.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onValueChange: v => setActiveTab(v),\n          children: [/*#__PURE__*/_jsxDEV(TabsList, {\n            className: \"grid w-full grid-cols-2 bg-slate-800\",\n            children: [/*#__PURE__*/_jsxDEV(TabsTrigger, {\n              value: \"login\",\n              className: \"text-slate-300 data-[state=active]:text-white\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabsTrigger, {\n              value: \"signup\",\n              className: \"text-slate-300 data-[state=active]:text-white\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n            value: \"login\",\n            className: \"space-y-4 mt-6\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              className: \"space-y-4\",\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"login-email\",\n                  className: \"text-slate-300\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(Mail, {\n                    className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"login-email\",\n                    name: \"cs_email_login\",\n                    type: \"email\",\n                    placeholder: \"Enter your email\",\n                    value: loginForm.email,\n                    onChange: e => setLoginForm({\n                      ...loginForm,\n                      email: e.target.value\n                    }),\n                    className: \"pl-10 bg-slate-800 border-slate-600 text-white\",\n                    autoComplete: \"username\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"login-password\",\n                  className: \"text-slate-300\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(Lock, {\n                    className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"login-password\",\n                    name: \"cs_password_login\",\n                    type: showPassword ? 'text' : 'password',\n                    placeholder: \"Enter your password\",\n                    value: loginForm.password,\n                    onChange: e => setLoginForm({\n                      ...loginForm,\n                      password: e.target.value\n                    }),\n                    className: \"pl-10 pr-10 bg-slate-800 border-slate-600 text-white\",\n                    autoComplete: \"current-password\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"ghost\",\n                    size: \"sm\",\n                    onClick: () => setShowPassword(!showPassword),\n                    className: \"absolute right-2 top-2 h-6 w-6 p-0 text-slate-400 hover:text-white\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(EyeOff, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 39\n                    }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"flex items-center gap-2 text-sm text-slate-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"remember-me\",\n                    checked: loginForm.rememberMe,\n                    onChange: e => setLoginForm({\n                      ...loginForm,\n                      rememberMe: e.target.checked\n                    }),\n                    className: \"rounded border-slate-600 bg-slate-800 text-blue-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 21\n                  }, this), \"Remember me\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-3\",\n                  children: [managed && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: handleMagicLink,\n                    className: \"text-xs text-emerald-300 hover:underline flex items-center gap-1\",\n                    title: \"Send a sign-in link to your email\",\n                    children: [/*#__PURE__*/_jsxDEV(LinkIcon, {\n                      className: \"h-3.5 w-3.5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 25\n                    }, this), \"Magic link\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => {\n                      setShowReset(true);\n                      setResetEmail(loginForm.email);\n                      setResetError('');\n                      setResetStep(1);\n                    },\n                    className: \"text-xs text-blue-400 hover:underline\",\n                    title: managed ? 'Send a password reset email' : 'Reset password stored on this device',\n                    children: \"Forgot password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"w-full bg-blue-600 hover:bg-blue-700\",\n                disabled: loading,\n                children: loading ? 'Signing In...' : 'Sign In'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabsContent, {\n            value: \"signup\",\n            className: \"space-y-4 mt-6\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSignup,\n              className: \"space-y-4\",\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"signup-name\",\n                  className: \"text-slate-300\",\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n                    className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"signup-name\",\n                    name: \"cs_name_signup\",\n                    type: \"text\",\n                    placeholder: \"Enter your full name\",\n                    value: signupForm.name,\n                    onChange: e => setSignupForm({\n                      ...signupForm,\n                      name: e.target.value\n                    }),\n                    className: \"pl-10 bg-slate-800 border-slate-600 text-white\",\n                    autoComplete: \"name\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"signup-email\",\n                  className: \"text-slate-300\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(Mail, {\n                    className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"signup-email\",\n                    name: \"cs_email_signup\",\n                    type: \"email\",\n                    placeholder: \"Enter your email\",\n                    value: signupForm.email,\n                    onChange: e => setSignupForm({\n                      ...signupForm,\n                      email: e.target.value\n                    }),\n                    className: \"pl-10 bg-slate-800 border-slate-600 text-white\",\n                    autoComplete: \"email\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"signup-password\",\n                  className: \"text-slate-300\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(Lock, {\n                    className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"signup-password\",\n                    name: \"cs_password_signup\",\n                    type: showPassword ? 'text' : 'password',\n                    placeholder: \"Create a password\",\n                    value: signupForm.password,\n                    onChange: e => setSignupForm({\n                      ...signupForm,\n                      password: e.target.value\n                    }),\n                    className: \"pl-10 pr-10 bg-slate-800 border-slate-600 text-white\",\n                    autoComplete: \"new-password\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"ghost\",\n                    size: \"sm\",\n                    onClick: () => setShowPassword(!showPassword),\n                    className: \"absolute right-2 top-2 h-6 w-6 p-0 text-slate-400 hover:text-white\",\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(EyeOff, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 39\n                    }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 72\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"signup-password2\",\n                  className: \"text-slate-300\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(KeyRound, {\n                    className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"signup-password2\",\n                    type: \"password\",\n                    placeholder: \"Confirm your password\",\n                    value: signupForm.confirmPassword,\n                    onChange: e => setSignupForm({\n                      ...signupForm,\n                      confirmPassword: e.target.value\n                    }),\n                    className: \"pl-10 bg-slate-800 border-slate-600 text-white\",\n                    autoComplete: \"new-password\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"w-full bg-blue-600 hover:bg-blue-700\",\n                disabled: loading,\n                children: loading ? 'Creating account...' : 'Create Account'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), showReset && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-md bg-slate-900 border-slate-700\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            size: \"sm\",\n            onClick: () => setShowReset(false),\n            className: \"absolute top-2 right-2 h-8 w-8 p-0 text-slate-400 hover:text-white\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-white text-center\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n            className: \"text-center\",\n            children: managed ? 'Enter your email to receive a reset link.' : 'Update the password stored on this device.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [resetStep === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleBeginReset,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"reset-email\",\n                className: \"text-slate-300\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(Mail, {\n                  className: \"absolute left-3 top-3 h-4 w-4 text-slate-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"reset-email\",\n                  type: \"email\",\n                  placeholder: \"Enter your account email\",\n                  value: resetEmail,\n                  onChange: e => setResetEmail(e.target.value),\n                  className: \"pl-10 bg-slate-800 border-slate-600 text-white\",\n                  autoComplete: \"email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), resetError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\",\n              children: resetError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"w-full bg-blue-600 hover:bg-blue-700\",\n              disabled: loading,\n              children: managed ? 'Send Reset Email' : 'Continue'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), !managed && resetStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCompleteReset,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"new-pass\",\n                className: \"text-slate-300\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"new-pass\",\n                type: \"password\",\n                placeholder: \"New password\",\n                value: resetNewPass,\n                onChange: e => setResetNewPass(e.target.value),\n                className: \"bg-slate-800 border-slate-600 text-white\",\n                autoComplete: \"new-password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"new-pass2\",\n                className: \"text-slate-300\",\n                children: \"Confirm New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"new-pass2\",\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                value: resetConfirmPass,\n                onChange: e => setResetConfirmPass(e.target.value),\n                className: \"bg-slate-800 border-slate-600 text-white\",\n                autoComplete: \"new-password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this), resetError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\",\n              children: resetError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"w-full bg-blue-600 hover:bg-blue-700\",\n              disabled: loading,\n              children: \"Update Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthModal, \"hVUzl8AAFnSAb2FVmI8T5AgQ5k4=\");\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useEffect","useState","X","Eye","EyeOff","User","UserIcon","Lock","Mail","Link","LinkIcon","KeyRound","Button","Input","Label","Tabs","TabsContent","TabsList","TabsTrigger","Card","CardContent","CardDescription","CardHeader","CardTitle","authService","jsxDEV","_jsxDEV","toUser","u","_u$avatar","id","name","email","plan","avatar","AuthModal","isOpen","onClose","defaultTab","onSuccess","_s","activeTab","setActiveTab","showPassword","setShowPassword","loading","setLoading","error","setError","managed","setManaged","isManaged","loginForm","setLoginForm","password","rememberMe","signupForm","setSignupForm","confirmPassword","showReset","setShowReset","resetEmail","setResetEmail","resetNewPass","setResetNewPass","resetConfirmPass","setResetConfirmPass","resetError","setResetError","resetStep","setResetStep","handleLogin","e","preventDefault","Error","signIn","trim","localStorage","setItem","removeItem","err","message","handleSignup","length","user","signUp","handleMagicLink","res","sendMagicLink","handleBeginReset","resetPassword","handleCompleteReset","key","toLowerCase","stored","getItem","hash","i","c","charCodeAt","creds","JSON","parse","updated","hashedPassword","toString","stringify","className","children","variant","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onValueChange","v","onSubmit","autoComplete","htmlFor","type","placeholder","onChange","target","required","checked","title","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/components/AuthModal.tsx"],"sourcesContent":["/**\n * Authentication modal component with login and signup functionality\n * - Uses Supabase (managed) via authService when configured, otherwise device-local demo auth.\n * - Includes device-local reset flow and Supabase email reset/magic link when available.\n * - Explicit autocomplete/name attributes to reduce unintended autofill.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { X, Eye, EyeOff, User as UserIcon, Lock, Mail, Link as LinkIcon, KeyRound } from 'lucide-react';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport authService, { type AuthUser } from '../services/authService';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  plan: 'free' | 'pro' | 'premium';\n  avatar?: string | null;\n}\n\ninterface AuthModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  defaultTab: 'login' | 'signup';\n  onSuccess: (user: User) => void;\n}\n\n/**\n * Map AuthUser to app user shape.\n */\nfunction toUser(u: AuthUser): User {\n  return { id: u.id, name: u.name, email: u.email, plan: u.plan, avatar: u.avatar ?? null };\n}\n\n/**\n * AuthModal component\n */\nexport function AuthModal({ isOpen, onClose, defaultTab, onSuccess }: AuthModalProps) {\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Managed auth available?\n  const [managed, setManaged] = useState(false);\n  useEffect(() => {\n    setManaged(authService.isManaged());\n  }, []);\n\n  // Forms\n  const [loginForm, setLoginForm] = useState({ email: '', password: '', rememberMe: true });\n  const [signupForm, setSignupForm] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    plan: 'free' as 'free' | 'pro' | 'premium',\n  });\n\n  // Local reset (demo) UI\n  const [showReset, setShowReset] = useState(false);\n  const [resetEmail, setResetEmail] = useState('');\n  const [resetNewPass, setResetNewPass] = useState('');\n  const [resetConfirmPass, setResetConfirmPass] = useState('');\n  const [resetError, setResetError] = useState('');\n  const [resetStep, setResetStep] = useState<1 | 2>(1);\n\n  if (!isOpen) return null;\n\n  /**\n   * Handle login using managed auth when available, else demo fallback.\n   */\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      if (!loginForm.email || !loginForm.password) throw new Error('Please fill in all fields');\n      const u = await authService.signIn(loginForm.email.trim(), loginForm.password);\n      if (loginForm.rememberMe) {\n        localStorage.setItem('cryptosniper_remember_me', 'true');\n      } else {\n        localStorage.removeItem('cryptosniper_remember_me');\n      }\n      onSuccess(toUser(u));\n      setLoginForm({ email: '', password: '', rememberMe: true });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Handle signup using managed auth when available, else demo fallback.\n   */\n  const handleSignup = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      if (!signupForm.name || !signupForm.email || !signupForm.password) {\n        throw new Error('Please fill in all required fields');\n      }\n      if (signupForm.password !== signupForm.confirmPassword) {\n        throw new Error('Passwords do not match');\n      }\n      if (signupForm.password.length < 6) {\n        throw new Error('Password must be at least 6 characters long');\n      }\n\n      const { user, message } = await authService.signUp(\n        signupForm.name.trim(),\n        signupForm.email.trim(),\n        signupForm.password,\n        signupForm.plan\n      );\n\n      if (user) {\n        onSuccess(toUser(user));\n      } else if (message) {\n        setError(message);\n      }\n      setSignupForm({ name: '', email: '', password: '', confirmPassword: '', plan: 'free' });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Signup failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Send magic link (managed only).\n   */\n  const handleMagicLink = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      if (!loginForm.email) throw new Error('Enter your email to receive a magic link');\n      const res = await authService.sendMagicLink(loginForm.email.trim());\n      setError(res.message);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to send magic link');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Begin reset. Managed: send email reset; Demo: move to step 2 (set new password).\n   */\n  const handleBeginReset = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setResetError('');\n    if (!resetEmail) {\n      setResetError('Please enter your email');\n      return;\n    }\n    if (managed) {\n      try {\n        const res = await authService.resetPassword(resetEmail.trim());\n        setShowReset(false);\n        setActiveTab('login');\n        setError(res.message || 'Password reset link sent.');\n      } catch (err) {\n        setResetError(err instanceof Error ? err.message : 'Failed to send reset email');\n      }\n      return;\n    }\n    setResetStep(2);\n  };\n\n  /**\n   * Complete reset in demo mode by updating the stored local hash.\n   */\n  const handleCompleteReset = (e: React.FormEvent) => {\n    e.preventDefault();\n    setResetError('');\n    if (!resetNewPass || resetNewPass.length < 6) {\n      setResetError('Password must be at least 6 characters long');\n      return;\n    }\n    if (resetNewPass !== resetConfirmPass) {\n      setResetError('Passwords do not match');\n      return;\n    }\n    try {\n      const key = `cryptosniper_creds_${resetEmail.trim().toLowerCase()}`;\n      const stored = localStorage.getItem(key);\n      if (!stored) {\n        setResetError('Account not found on this device.');\n        return;\n      }\n      // lightweight hash (demo)\n      let hash = 0;\n      for (let i = 0; i < resetNewPass.length; i++) {\n        const c = resetNewPass.charCodeAt(i);\n        hash = (hash << 5) - hash + c;\n        hash |= 0;\n      }\n      const creds = JSON.parse(stored);\n      const updated = { ...creds, hashedPassword: hash.toString(36) };\n      localStorage.setItem(key, JSON.stringify(updated));\n      setShowReset(false);\n      setResetEmail('');\n      setResetNewPass('');\n      setResetConfirmPass('');\n      setResetStep(1);\n      setActiveTab('login');\n      setError('Password updated. Please sign in.');\n    } catch {\n      setResetError('Failed to update password');\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md bg-slate-900 border-slate-700\">\n        <CardHeader className=\"relative\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={onClose}\n            className=\"absolute top-2 right-2 h-8 w-8 p-0 text-slate-400 hover:text-white\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n          <CardTitle className=\"text-white text-center\">Welcome to CryptoSniper</CardTitle>\n          <CardDescription className=\"text-center\">\n            {activeTab === 'login' ? 'Sign in to your account' : 'Create a new account'}\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent>\n          {/* Mode helper */}\n          <p className=\"text-[11px] text-slate-500 mb-3\">\n            {managed\n              ? 'Managed Auth enabled (Supabase). Cross-device sign-in and email recovery available.'\n              : 'Demo mode: accounts are stored on this device only. Use the same browser to sign back in.'}\n          </p>\n\n          <Tabs value={activeTab} onValueChange={(v: any) => setActiveTab(v)}>\n            <TabsList className=\"grid w-full grid-cols-2 bg-slate-800\">\n              <TabsTrigger value=\"login\" className=\"text-slate-300 data-[state=active]:text-white\">\n                Sign In\n              </TabsTrigger>\n              <TabsTrigger value=\"signup\" className=\"text-slate-300 data-[state=active]:text-white\">\n                Sign Up\n              </TabsTrigger>\n            </TabsList>\n\n            {/* Login */}\n            <TabsContent value=\"login\" className=\"space-y-4 mt-6\">\n              <form onSubmit={handleLogin} className=\"space-y-4\" autoComplete=\"off\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"login-email\" className=\"text-slate-300\">\n                    Email\n                  </Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                    <Input\n                      id=\"login-email\"\n                      name=\"cs_email_login\"\n                      type=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={loginForm.email}\n                      onChange={(e) => setLoginForm({ ...loginForm, email: e.target.value })}\n                      className=\"pl-10 bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"username\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"login-password\" className=\"text-slate-300\">\n                    Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                    <Input\n                      id=\"login-password\"\n                      name=\"cs_password_login\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Enter your password\"\n                      value={loginForm.password}\n                      onChange={(e) => setLoginForm({ ...loginForm, password: e.target.value })}\n                      className=\"pl-10 pr-10 bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"current-password\"\n                      required\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-2 top-2 h-6 w-6 p-0 text-slate-400 hover:text-white\"\n                    >\n                      {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <label className=\"flex items-center gap-2 text-sm text-slate-300\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"remember-me\"\n                      checked={loginForm.rememberMe}\n                      onChange={(e) => setLoginForm({ ...loginForm, rememberMe: e.target.checked })}\n                      className=\"rounded border-slate-600 bg-slate-800 text-blue-600\"\n                    />\n                    Remember me\n                  </label>\n\n                  <div className=\"flex items-center gap-3\">\n                    {managed && (\n                      <button\n                        type=\"button\"\n                        onClick={handleMagicLink}\n                        className=\"text-xs text-emerald-300 hover:underline flex items-center gap-1\"\n                        title=\"Send a sign-in link to your email\"\n                      >\n                        <LinkIcon className=\"h-3.5 w-3.5\" />\n                        Magic link\n                      </button>\n                    )}\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setShowReset(true);\n                        setResetEmail(loginForm.email);\n                        setResetError('');\n                        setResetStep(1);\n                      }}\n                      className=\"text-xs text-blue-400 hover:underline\"\n                      title={managed ? 'Send a password reset email' : 'Reset password stored on this device'}\n                    >\n                      Forgot password?\n                    </button>\n                  </div>\n                </div>\n\n                {error && (\n                  <div className=\"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\">\n                    {error}\n                  </div>\n                )}\n\n                <Button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700\" disabled={loading}>\n                  {loading ? 'Signing In...' : 'Sign In'}\n                </Button>\n              </form>\n            </TabsContent>\n\n            {/* Signup */}\n            <TabsContent value=\"signup\" className=\"space-y-4 mt-6\">\n              <form onSubmit={handleSignup} className=\"space-y-4\" autoComplete=\"off\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-name\" className=\"text-slate-300\">\n                    Full Name\n                  </Label>\n                  <div className=\"relative\">\n                    <UserIcon className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                    <Input\n                      id=\"signup-name\"\n                      name=\"cs_name_signup\"\n                      type=\"text\"\n                      placeholder=\"Enter your full name\"\n                      value={signupForm.name}\n                      onChange={(e) => setSignupForm({ ...signupForm, name: e.target.value })}\n                      className=\"pl-10 bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"name\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-email\" className=\"text-slate-300\">\n                    Email\n                  </Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                    <Input\n                      id=\"signup-email\"\n                      name=\"cs_email_signup\"\n                      type=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={signupForm.email}\n                      onChange={(e) => setSignupForm({ ...signupForm, email: e.target.value })}\n                      className=\"pl-10 bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"email\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-password\" className=\"text-slate-300\">\n                    Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                    <Input\n                      id=\"signup-password\"\n                      name=\"cs_password_signup\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Create a password\"\n                      value={signupForm.password}\n                      onChange={(e) => setSignupForm({ ...signupForm, password: e.target.value })}\n                      className=\"pl-10 pr-10 bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"new-password\"\n                      required\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-2 top-2 h-6 w-6 p-0 text-slate-400 hover:text-white\"\n                    >\n                      {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-password2\" className=\"text-slate-300\">\n                    Confirm Password\n                  </Label>\n                  <div className=\"relative\">\n                    <KeyRound className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                    <Input\n                      id=\"signup-password2\"\n                      type=\"password\"\n                      placeholder=\"Confirm your password\"\n                      value={signupForm.confirmPassword}\n                      onChange={(e) => setSignupForm({ ...signupForm, confirmPassword: e.target.value })}\n                      className=\"pl-10 bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"new-password\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {error && (\n                  <div className=\"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\">\n                    {error}\n                  </div>\n                )}\n\n                <Button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700\" disabled={loading}>\n                  {loading ? 'Creating account...' : 'Create Account'}\n                </Button>\n              </form>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n\n      {/* Forgot Password Modal */}\n      {showReset && (\n        <div className=\"fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4\">\n          <Card className=\"w-full max-w-md bg-slate-900 border-slate-700\">\n            <CardHeader className=\"relative\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setShowReset(false)}\n                className=\"absolute top-2 right-2 h-8 w-8 p-0 text-slate-400 hover:text-white\"\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n              <CardTitle className=\"text-white text-center\">Reset Password</CardTitle>\n              <CardDescription className=\"text-center\">\n                {managed ? 'Enter your email to receive a reset link.' : 'Update the password stored on this device.'}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {resetStep === 1 && (\n                <form onSubmit={handleBeginReset} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"reset-email\" className=\"text-slate-300\">\n                      Email\n                    </Label>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-3 h-4 w-4 text-slate-400\" />\n                      <Input\n                        id=\"reset-email\"\n                        type=\"email\"\n                        placeholder=\"Enter your account email\"\n                        value={resetEmail}\n                        onChange={(e) => setResetEmail(e.target.value)}\n                        className=\"pl-10 bg-slate-800 border-slate-600 text-white\"\n                        autoComplete=\"email\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  {resetError && (\n                    <div className=\"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\">\n                      {resetError}\n                    </div>\n                  )}\n                  <Button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700\" disabled={loading}>\n                    {managed ? 'Send Reset Email' : 'Continue'}\n                  </Button>\n                </form>\n              )}\n              {!managed && resetStep === 2 && (\n                <form onSubmit={handleCompleteReset} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"new-pass\" className=\"text-slate-300\">\n                      New Password\n                    </Label>\n                    <Input\n                      id=\"new-pass\"\n                      type=\"password\"\n                      placeholder=\"New password\"\n                      value={resetNewPass}\n                      onChange={(e) => setResetNewPass(e.target.value)}\n                      className=\"bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"new-password\"\n                      required\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"new-pass2\" className=\"text-slate-300\">\n                      Confirm New Password\n                    </Label>\n                    <Input\n                      id=\"new-pass2\"\n                      type=\"password\"\n                      placeholder=\"Confirm password\"\n                      value={resetConfirmPass}\n                      onChange={(e) => setResetConfirmPass(e.target.value)}\n                      className=\"bg-slate-800 border-slate-600 text-white\"\n                      autoComplete=\"new-password\"\n                      required\n                    />\n                  </div>\n                  {resetError && (\n                    <div className=\"text-red-400 text-sm bg-red-900/20 border border-red-800 rounded-md p-3\">\n                      {resetError}\n                    </div>\n                  )}\n                  <Button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700\" disabled={loading}>\n                    Update Password\n                  </Button>\n                </form>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,CAAC,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,IAAIC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,cAAc;AACvG,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,IAAI,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,WAAW;AACpE,SAASC,IAAI,EAAEC,WAAW,EAAEC,eAAe,EAAEC,UAAU,EAAEC,SAAS,QAAQ,WAAW;AACrF,OAAOC,WAAW,MAAyB,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBrE;AACA;AACA;AACA,SAASC,MAAMA,CAACC,CAAW,EAAQ;EAAA,IAAAC,SAAA;EACjC,OAAO;IAAEC,EAAE,EAAEF,CAAC,CAACE,EAAE;IAAEC,IAAI,EAAEH,CAAC,CAACG,IAAI;IAAEC,KAAK,EAAEJ,CAAC,CAACI,KAAK;IAAEC,IAAI,EAAEL,CAAC,CAACK,IAAI;IAAEC,MAAM,GAAAL,SAAA,GAAED,CAAC,CAACM,MAAM,cAAAL,SAAA,cAAAA,SAAA,GAAI;EAAK,CAAC;AAC3F;;AAEA;AACA;AACA;AACA,OAAO,SAASM,SAASA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAA0B,CAAC,EAAE;EAAAC,EAAA;EACpF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAACqC,UAAU,CAAC;EACtD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8C,KAAK,EAAEC,QAAQ,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC7CD,SAAS,CAAC,MAAM;IACdkD,UAAU,CAAC1B,WAAW,CAAC2B,SAAS,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpD,QAAQ,CAAC;IAAE+B,KAAK,EAAE,EAAE;IAAEsB,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;EACzF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC;IAC3C8B,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTsB,QAAQ,EAAE,EAAE;IACZI,eAAe,EAAE,EAAE;IACnBzB,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC8D,YAAY,EAAEC,eAAe,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkE,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoE,SAAS,EAAEC,YAAY,CAAC,GAAGrE,QAAQ,CAAQ,CAAC,CAAC;EAEpD,IAAI,CAACmC,MAAM,EAAE,OAAO,IAAI;;EAExB;AACF;AACA;EACE,MAAMmC,WAAW,GAAG,MAAOC,CAAkB,IAAK;IAChDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB3B,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,IAAI,CAACI,SAAS,CAACpB,KAAK,IAAI,CAACoB,SAAS,CAACE,QAAQ,EAAE,MAAM,IAAIoB,KAAK,CAAC,2BAA2B,CAAC;MACzF,MAAM9C,CAAC,GAAG,MAAMJ,WAAW,CAACmD,MAAM,CAACvB,SAAS,CAACpB,KAAK,CAAC4C,IAAI,CAAC,CAAC,EAAExB,SAAS,CAACE,QAAQ,CAAC;MAC9E,IAAIF,SAAS,CAACG,UAAU,EAAE;QACxBsB,YAAY,CAACC,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC;MAC1D,CAAC,MAAM;QACLD,YAAY,CAACE,UAAU,CAAC,0BAA0B,CAAC;MACrD;MACAxC,SAAS,CAACZ,MAAM,CAACC,CAAC,CAAC,CAAC;MACpByB,YAAY,CAAC;QAAErB,KAAK,EAAE,EAAE;QAAEsB,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZhC,QAAQ,CAACgC,GAAG,YAAYN,KAAK,GAAGM,GAAG,CAACC,OAAO,GAAG,cAAc,CAAC;IAC/D,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMoC,YAAY,GAAG,MAAOV,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB3B,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,IAAI,CAACQ,UAAU,CAACzB,IAAI,IAAI,CAACyB,UAAU,CAACxB,KAAK,IAAI,CAACwB,UAAU,CAACF,QAAQ,EAAE;QACjE,MAAM,IAAIoB,KAAK,CAAC,oCAAoC,CAAC;MACvD;MACA,IAAIlB,UAAU,CAACF,QAAQ,KAAKE,UAAU,CAACE,eAAe,EAAE;QACtD,MAAM,IAAIgB,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,IAAIlB,UAAU,CAACF,QAAQ,CAAC6B,MAAM,GAAG,CAAC,EAAE;QAClC,MAAM,IAAIT,KAAK,CAAC,6CAA6C,CAAC;MAChE;MAEA,MAAM;QAAEU,IAAI;QAAEH;MAAQ,CAAC,GAAG,MAAMzD,WAAW,CAAC6D,MAAM,CAChD7B,UAAU,CAACzB,IAAI,CAAC6C,IAAI,CAAC,CAAC,EACtBpB,UAAU,CAACxB,KAAK,CAAC4C,IAAI,CAAC,CAAC,EACvBpB,UAAU,CAACF,QAAQ,EACnBE,UAAU,CAACvB,IACb,CAAC;MAED,IAAImD,IAAI,EAAE;QACR7C,SAAS,CAACZ,MAAM,CAACyD,IAAI,CAAC,CAAC;MACzB,CAAC,MAAM,IAAIH,OAAO,EAAE;QAClBjC,QAAQ,CAACiC,OAAO,CAAC;MACnB;MACAxB,aAAa,CAAC;QAAE1B,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEsB,QAAQ,EAAE,EAAE;QAAEI,eAAe,EAAE,EAAE;QAAEzB,IAAI,EAAE;MAAO,CAAC,CAAC;IACzF,CAAC,CAAC,OAAO+C,GAAG,EAAE;MACZhC,QAAQ,CAACgC,GAAG,YAAYN,KAAK,GAAGM,GAAG,CAACC,OAAO,GAAG,eAAe,CAAC;IAChE,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMwC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFxC,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MACZ,IAAI,CAACI,SAAS,CAACpB,KAAK,EAAE,MAAM,IAAI0C,KAAK,CAAC,0CAA0C,CAAC;MACjF,MAAMa,GAAG,GAAG,MAAM/D,WAAW,CAACgE,aAAa,CAACpC,SAAS,CAACpB,KAAK,CAAC4C,IAAI,CAAC,CAAC,CAAC;MACnE5B,QAAQ,CAACuC,GAAG,CAACN,OAAO,CAAC;IACvB,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZhC,QAAQ,CAACgC,GAAG,YAAYN,KAAK,GAAGM,GAAG,CAACC,OAAO,GAAG,2BAA2B,CAAC;IAC5E,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAM2C,gBAAgB,GAAG,MAAOjB,CAAkB,IAAK;IACrDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,aAAa,CAAC,EAAE,CAAC;IACjB,IAAI,CAACP,UAAU,EAAE;MACfO,aAAa,CAAC,yBAAyB,CAAC;MACxC;IACF;IACA,IAAInB,OAAO,EAAE;MACX,IAAI;QACF,MAAMsC,GAAG,GAAG,MAAM/D,WAAW,CAACkE,aAAa,CAAC7B,UAAU,CAACe,IAAI,CAAC,CAAC,CAAC;QAC9DhB,YAAY,CAAC,KAAK,CAAC;QACnBlB,YAAY,CAAC,OAAO,CAAC;QACrBM,QAAQ,CAACuC,GAAG,CAACN,OAAO,IAAI,2BAA2B,CAAC;MACtD,CAAC,CAAC,OAAOD,GAAG,EAAE;QACZZ,aAAa,CAACY,GAAG,YAAYN,KAAK,GAAGM,GAAG,CAACC,OAAO,GAAG,4BAA4B,CAAC;MAClF;MACA;IACF;IACAX,YAAY,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;AACF;AACA;EACE,MAAMqB,mBAAmB,GAAInB,CAAkB,IAAK;IAClDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,aAAa,CAAC,EAAE,CAAC;IACjB,IAAI,CAACL,YAAY,IAAIA,YAAY,CAACoB,MAAM,GAAG,CAAC,EAAE;MAC5Cf,aAAa,CAAC,6CAA6C,CAAC;MAC5D;IACF;IACA,IAAIL,YAAY,KAAKE,gBAAgB,EAAE;MACrCG,aAAa,CAAC,wBAAwB,CAAC;MACvC;IACF;IACA,IAAI;MACF,MAAMwB,GAAG,GAAG,sBAAsB/B,UAAU,CAACe,IAAI,CAAC,CAAC,CAACiB,WAAW,CAAC,CAAC,EAAE;MACnE,MAAMC,MAAM,GAAGjB,YAAY,CAACkB,OAAO,CAACH,GAAG,CAAC;MACxC,IAAI,CAACE,MAAM,EAAE;QACX1B,aAAa,CAAC,mCAAmC,CAAC;QAClD;MACF;MACA;MACA,IAAI4B,IAAI,GAAG,CAAC;MACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlC,YAAY,CAACoB,MAAM,EAAEc,CAAC,EAAE,EAAE;QAC5C,MAAMC,CAAC,GAAGnC,YAAY,CAACoC,UAAU,CAACF,CAAC,CAAC;QACpCD,IAAI,GAAG,CAACA,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAGE,CAAC;QAC7BF,IAAI,IAAI,CAAC;MACX;MACA,MAAMI,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACR,MAAM,CAAC;MAChC,MAAMS,OAAO,GAAG;QAAE,GAAGH,KAAK;QAAEI,cAAc,EAAER,IAAI,CAACS,QAAQ,CAAC,EAAE;MAAE,CAAC;MAC/D5B,YAAY,CAACC,OAAO,CAACc,GAAG,EAAES,IAAI,CAACK,SAAS,CAACH,OAAO,CAAC,CAAC;MAClD3C,YAAY,CAAC,KAAK,CAAC;MACnBE,aAAa,CAAC,EAAE,CAAC;MACjBE,eAAe,CAAC,EAAE,CAAC;MACnBE,mBAAmB,CAAC,EAAE,CAAC;MACvBI,YAAY,CAAC,CAAC,CAAC;MACf5B,YAAY,CAAC,OAAO,CAAC;MACrBM,QAAQ,CAAC,mCAAmC,CAAC;IAC/C,CAAC,CAAC,MAAM;MACNoB,aAAa,CAAC,2BAA2B,CAAC;IAC5C;EACF,CAAC;EAED,oBACE1C,OAAA;IAAKiF,SAAS,EAAC,sFAAsF;IAAAC,QAAA,gBACnGlF,OAAA,CAACP,IAAI;MAACwF,SAAS,EAAC,+CAA+C;MAAAC,QAAA,gBAC7DlF,OAAA,CAACJ,UAAU;QAACqF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBAC9BlF,OAAA,CAACd,MAAM;UACLiG,OAAO,EAAC,OAAO;UACfC,IAAI,EAAC,IAAI;UACTC,OAAO,EAAE1E,OAAQ;UACjBsE,SAAS,EAAC,oEAAoE;UAAAC,QAAA,eAE9ElF,OAAA,CAACxB,CAAC;YAACyG,SAAS,EAAC;UAAS;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACTzF,OAAA,CAACH,SAAS;UAACoF,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAuB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACjFzF,OAAA,CAACL,eAAe;UAACsF,SAAS,EAAC,aAAa;UAAAC,QAAA,EACrCnE,SAAS,KAAK,OAAO,GAAG,yBAAyB,GAAG;QAAsB;UAAAuE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEbzF,OAAA,CAACN,WAAW;QAAAwF,QAAA,gBAEVlF,OAAA;UAAGiF,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAC3C3D,OAAO,GACJ,qFAAqF,GACrF;QAA2F;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9F,CAAC,eAEJzF,OAAA,CAACX,IAAI;UAACqG,KAAK,EAAE3E,SAAU;UAAC4E,aAAa,EAAGC,CAAM,IAAK5E,YAAY,CAAC4E,CAAC,CAAE;UAAAV,QAAA,gBACjElF,OAAA,CAACT,QAAQ;YAAC0F,SAAS,EAAC,sCAAsC;YAAAC,QAAA,gBACxDlF,OAAA,CAACR,WAAW;cAACkG,KAAK,EAAC,OAAO;cAACT,SAAS,EAAC,+CAA+C;cAAAC,QAAA,EAAC;YAErF;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACdzF,OAAA,CAACR,WAAW;cAACkG,KAAK,EAAC,QAAQ;cAACT,SAAS,EAAC,+CAA+C;cAAAC,QAAA,EAAC;YAEtF;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAGXzF,OAAA,CAACV,WAAW;YAACoG,KAAK,EAAC,OAAO;YAACT,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eACnDlF,OAAA;cAAM6F,QAAQ,EAAEhD,WAAY;cAACoC,SAAS,EAAC,WAAW;cAACa,YAAY,EAAC,KAAK;cAAAZ,QAAA,gBACnElF,OAAA;gBAAKiF,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;kBAAC2G,OAAO,EAAC,aAAa;kBAACd,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAExD;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRzF,OAAA;kBAAKiF,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBlF,OAAA,CAAClB,IAAI;oBAACmG,SAAS,EAAC;kBAA8C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACjEzF,OAAA,CAACb,KAAK;oBACJiB,EAAE,EAAC,aAAa;oBAChBC,IAAI,EAAC,gBAAgB;oBACrB2F,IAAI,EAAC,OAAO;oBACZC,WAAW,EAAC,kBAAkB;oBAC9BP,KAAK,EAAEhE,SAAS,CAACpB,KAAM;oBACvB4F,QAAQ,EAAGpD,CAAC,IAAKnB,YAAY,CAAC;sBAAE,GAAGD,SAAS;sBAAEpB,KAAK,EAAEwC,CAAC,CAACqD,MAAM,CAACT;oBAAM,CAAC,CAAE;oBACvET,SAAS,EAAC,gDAAgD;oBAC1Da,YAAY,EAAC,UAAU;oBACvBM,QAAQ;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENzF,OAAA;gBAAKiF,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;kBAAC2G,OAAO,EAAC,gBAAgB;kBAACd,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAE3D;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRzF,OAAA;kBAAKiF,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBlF,OAAA,CAACnB,IAAI;oBAACoG,SAAS,EAAC;kBAA8C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACjEzF,OAAA,CAACb,KAAK;oBACJiB,EAAE,EAAC,gBAAgB;oBACnBC,IAAI,EAAC,mBAAmB;oBACxB2F,IAAI,EAAE/E,YAAY,GAAG,MAAM,GAAG,UAAW;oBACzCgF,WAAW,EAAC,qBAAqB;oBACjCP,KAAK,EAAEhE,SAAS,CAACE,QAAS;oBAC1BsE,QAAQ,EAAGpD,CAAC,IAAKnB,YAAY,CAAC;sBAAE,GAAGD,SAAS;sBAAEE,QAAQ,EAAEkB,CAAC,CAACqD,MAAM,CAACT;oBAAM,CAAC,CAAE;oBAC1ET,SAAS,EAAC,sDAAsD;oBAChEa,YAAY,EAAC,kBAAkB;oBAC/BM,QAAQ;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC,eACFzF,OAAA,CAACd,MAAM;oBACL8G,IAAI,EAAC,QAAQ;oBACbb,OAAO,EAAC,OAAO;oBACfC,IAAI,EAAC,IAAI;oBACTC,OAAO,EAAEA,CAAA,KAAMnE,eAAe,CAAC,CAACD,YAAY,CAAE;oBAC9CgE,SAAS,EAAC,oEAAoE;oBAAAC,QAAA,EAE7EjE,YAAY,gBAAGjB,OAAA,CAACtB,MAAM;sBAACuG,SAAS,EAAC;oBAAS;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,gBAAGzF,OAAA,CAACvB,GAAG;sBAACwG,SAAS,EAAC;oBAAS;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENzF,OAAA;gBAAKiF,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,gBAChDlF,OAAA;kBAAOiF,SAAS,EAAC,gDAAgD;kBAAAC,QAAA,gBAC/DlF,OAAA;oBACEgG,IAAI,EAAC,UAAU;oBACf5F,EAAE,EAAC,aAAa;oBAChBiG,OAAO,EAAE3E,SAAS,CAACG,UAAW;oBAC9BqE,QAAQ,EAAGpD,CAAC,IAAKnB,YAAY,CAAC;sBAAE,GAAGD,SAAS;sBAAEG,UAAU,EAAEiB,CAAC,CAACqD,MAAM,CAACE;oBAAQ,CAAC,CAAE;oBAC9EpB,SAAS,EAAC;kBAAqD;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChE,CAAC,eAEJ;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAERzF,OAAA;kBAAKiF,SAAS,EAAC,yBAAyB;kBAAAC,QAAA,GACrC3D,OAAO,iBACNvB,OAAA;oBACEgG,IAAI,EAAC,QAAQ;oBACbX,OAAO,EAAEzB,eAAgB;oBACzBqB,SAAS,EAAC,kEAAkE;oBAC5EqB,KAAK,EAAC,mCAAmC;oBAAApB,QAAA,gBAEzClF,OAAA,CAAChB,QAAQ;sBAACiG,SAAS,EAAC;oBAAa;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,cAEtC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CACT,eACDzF,OAAA;oBACEgG,IAAI,EAAC,QAAQ;oBACbX,OAAO,EAAEA,CAAA,KAAM;sBACbnD,YAAY,CAAC,IAAI,CAAC;sBAClBE,aAAa,CAACV,SAAS,CAACpB,KAAK,CAAC;sBAC9BoC,aAAa,CAAC,EAAE,CAAC;sBACjBE,YAAY,CAAC,CAAC,CAAC;oBACjB,CAAE;oBACFqC,SAAS,EAAC,uCAAuC;oBACjDqB,KAAK,EAAE/E,OAAO,GAAG,6BAA6B,GAAG,sCAAuC;oBAAA2D,QAAA,EACzF;kBAED;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,EAELpE,KAAK,iBACJrB,OAAA;gBAAKiF,SAAS,EAAC,yEAAyE;gBAAAC,QAAA,EACrF7D;cAAK;gBAAAiE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN,eAEDzF,OAAA,CAACd,MAAM;gBAAC8G,IAAI,EAAC,QAAQ;gBAACf,SAAS,EAAC,sCAAsC;gBAACsB,QAAQ,EAAEpF,OAAQ;gBAAA+D,QAAA,EACtF/D,OAAO,GAAG,eAAe,GAAG;cAAS;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eAGdzF,OAAA,CAACV,WAAW;YAACoG,KAAK,EAAC,QAAQ;YAACT,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eACpDlF,OAAA;cAAM6F,QAAQ,EAAErC,YAAa;cAACyB,SAAS,EAAC,WAAW;cAACa,YAAY,EAAC,KAAK;cAAAZ,QAAA,gBACpElF,OAAA;gBAAKiF,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;kBAAC2G,OAAO,EAAC,aAAa;kBAACd,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAExD;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRzF,OAAA;kBAAKiF,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBlF,OAAA,CAACpB,QAAQ;oBAACqG,SAAS,EAAC;kBAA8C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACrEzF,OAAA,CAACb,KAAK;oBACJiB,EAAE,EAAC,aAAa;oBAChBC,IAAI,EAAC,gBAAgB;oBACrB2F,IAAI,EAAC,MAAM;oBACXC,WAAW,EAAC,sBAAsB;oBAClCP,KAAK,EAAE5D,UAAU,CAACzB,IAAK;oBACvB6F,QAAQ,EAAGpD,CAAC,IAAKf,aAAa,CAAC;sBAAE,GAAGD,UAAU;sBAAEzB,IAAI,EAAEyC,CAAC,CAACqD,MAAM,CAACT;oBAAM,CAAC,CAAE;oBACxET,SAAS,EAAC,gDAAgD;oBAC1Da,YAAY,EAAC,MAAM;oBACnBM,QAAQ;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENzF,OAAA;gBAAKiF,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;kBAAC2G,OAAO,EAAC,cAAc;kBAACd,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAEzD;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRzF,OAAA;kBAAKiF,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBlF,OAAA,CAAClB,IAAI;oBAACmG,SAAS,EAAC;kBAA8C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACjEzF,OAAA,CAACb,KAAK;oBACJiB,EAAE,EAAC,cAAc;oBACjBC,IAAI,EAAC,iBAAiB;oBACtB2F,IAAI,EAAC,OAAO;oBACZC,WAAW,EAAC,kBAAkB;oBAC9BP,KAAK,EAAE5D,UAAU,CAACxB,KAAM;oBACxB4F,QAAQ,EAAGpD,CAAC,IAAKf,aAAa,CAAC;sBAAE,GAAGD,UAAU;sBAAExB,KAAK,EAAEwC,CAAC,CAACqD,MAAM,CAACT;oBAAM,CAAC,CAAE;oBACzET,SAAS,EAAC,gDAAgD;oBAC1Da,YAAY,EAAC,OAAO;oBACpBM,QAAQ;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENzF,OAAA;gBAAKiF,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;kBAAC2G,OAAO,EAAC,iBAAiB;kBAACd,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAE5D;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRzF,OAAA;kBAAKiF,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBlF,OAAA,CAACnB,IAAI;oBAACoG,SAAS,EAAC;kBAA8C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACjEzF,OAAA,CAACb,KAAK;oBACJiB,EAAE,EAAC,iBAAiB;oBACpBC,IAAI,EAAC,oBAAoB;oBACzB2F,IAAI,EAAE/E,YAAY,GAAG,MAAM,GAAG,UAAW;oBACzCgF,WAAW,EAAC,mBAAmB;oBAC/BP,KAAK,EAAE5D,UAAU,CAACF,QAAS;oBAC3BsE,QAAQ,EAAGpD,CAAC,IAAKf,aAAa,CAAC;sBAAE,GAAGD,UAAU;sBAAEF,QAAQ,EAAEkB,CAAC,CAACqD,MAAM,CAACT;oBAAM,CAAC,CAAE;oBAC5ET,SAAS,EAAC,sDAAsD;oBAChEa,YAAY,EAAC,cAAc;oBAC3BM,QAAQ;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC,eACFzF,OAAA,CAACd,MAAM;oBACL8G,IAAI,EAAC,QAAQ;oBACbb,OAAO,EAAC,OAAO;oBACfC,IAAI,EAAC,IAAI;oBACTC,OAAO,EAAEA,CAAA,KAAMnE,eAAe,CAAC,CAACD,YAAY,CAAE;oBAC9CgE,SAAS,EAAC,oEAAoE;oBAAAC,QAAA,EAE7EjE,YAAY,gBAAGjB,OAAA,CAACtB,MAAM;sBAACuG,SAAS,EAAC;oBAAS;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,gBAAGzF,OAAA,CAACvB,GAAG;sBAACwG,SAAS,EAAC;oBAAS;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENzF,OAAA;gBAAKiF,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;kBAAC2G,OAAO,EAAC,kBAAkB;kBAACd,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAE7D;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRzF,OAAA;kBAAKiF,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACvBlF,OAAA,CAACf,QAAQ;oBAACgG,SAAS,EAAC;kBAA8C;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACrEzF,OAAA,CAACb,KAAK;oBACJiB,EAAE,EAAC,kBAAkB;oBACrB4F,IAAI,EAAC,UAAU;oBACfC,WAAW,EAAC,uBAAuB;oBACnCP,KAAK,EAAE5D,UAAU,CAACE,eAAgB;oBAClCkE,QAAQ,EAAGpD,CAAC,IAAKf,aAAa,CAAC;sBAAE,GAAGD,UAAU;sBAAEE,eAAe,EAAEc,CAAC,CAACqD,MAAM,CAACT;oBAAM,CAAC,CAAE;oBACnFT,SAAS,EAAC,gDAAgD;oBAC1Da,YAAY,EAAC,cAAc;oBAC3BM,QAAQ;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,EAELpE,KAAK,iBACJrB,OAAA;gBAAKiF,SAAS,EAAC,yEAAyE;gBAAAC,QAAA,EACrF7D;cAAK;gBAAAiE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN,eAEDzF,OAAA,CAACd,MAAM;gBAAC8G,IAAI,EAAC,QAAQ;gBAACf,SAAS,EAAC,sCAAsC;gBAACsB,QAAQ,EAAEpF,OAAQ;gBAAA+D,QAAA,EACtF/D,OAAO,GAAG,qBAAqB,GAAG;cAAgB;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EAGNxD,SAAS,iBACRjC,OAAA;MAAKiF,SAAS,EAAC,qEAAqE;MAAAC,QAAA,eAClFlF,OAAA,CAACP,IAAI;QAACwF,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC7DlF,OAAA,CAACJ,UAAU;UAACqF,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAC9BlF,OAAA,CAACd,MAAM;YACLiG,OAAO,EAAC,OAAO;YACfC,IAAI,EAAC,IAAI;YACTC,OAAO,EAAEA,CAAA,KAAMnD,YAAY,CAAC,KAAK,CAAE;YACnC+C,SAAS,EAAC,oEAAoE;YAAAC,QAAA,eAE9ElF,OAAA,CAACxB,CAAC;cAACyG,SAAS,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACTzF,OAAA,CAACH,SAAS;YAACoF,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAC;UAAc;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACxEzF,OAAA,CAACL,eAAe;YAACsF,SAAS,EAAC,aAAa;YAAAC,QAAA,EACrC3D,OAAO,GAAG,2CAA2C,GAAG;UAA4C;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACbzF,OAAA,CAACN,WAAW;UAAAwF,QAAA,GACTvC,SAAS,KAAK,CAAC,iBACd3C,OAAA;YAAM6F,QAAQ,EAAE9B,gBAAiB;YAACkB,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACrDlF,OAAA;cAAKiF,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;gBAAC2G,OAAO,EAAC,aAAa;gBAACd,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAC;cAExD;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRzF,OAAA;gBAAKiF,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACvBlF,OAAA,CAAClB,IAAI;kBAACmG,SAAS,EAAC;gBAA8C;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjEzF,OAAA,CAACb,KAAK;kBACJiB,EAAE,EAAC,aAAa;kBAChB4F,IAAI,EAAC,OAAO;kBACZC,WAAW,EAAC,0BAA0B;kBACtCP,KAAK,EAAEvD,UAAW;kBAClB+D,QAAQ,EAAGpD,CAAC,IAAKV,aAAa,CAACU,CAAC,CAACqD,MAAM,CAACT,KAAK,CAAE;kBAC/CT,SAAS,EAAC,gDAAgD;kBAC1Da,YAAY,EAAC,OAAO;kBACpBM,QAAQ;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EACLhD,UAAU,iBACTzC,OAAA;cAAKiF,SAAS,EAAC,yEAAyE;cAAAC,QAAA,EACrFzC;YAAU;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CACN,eACDzF,OAAA,CAACd,MAAM;cAAC8G,IAAI,EAAC,QAAQ;cAACf,SAAS,EAAC,sCAAsC;cAACsB,QAAQ,EAAEpF,OAAQ;cAAA+D,QAAA,EACtF3D,OAAO,GAAG,kBAAkB,GAAG;YAAU;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACP,EACA,CAAClE,OAAO,IAAIoB,SAAS,KAAK,CAAC,iBAC1B3C,OAAA;YAAM6F,QAAQ,EAAE5B,mBAAoB;YAACgB,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxDlF,OAAA;cAAKiF,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;gBAAC2G,OAAO,EAAC,UAAU;gBAACd,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAC;cAErD;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRzF,OAAA,CAACb,KAAK;gBACJiB,EAAE,EAAC,UAAU;gBACb4F,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,cAAc;gBAC1BP,KAAK,EAAErD,YAAa;gBACpB6D,QAAQ,EAAGpD,CAAC,IAAKR,eAAe,CAACQ,CAAC,CAACqD,MAAM,CAACT,KAAK,CAAE;gBACjDT,SAAS,EAAC,0CAA0C;gBACpDa,YAAY,EAAC,cAAc;gBAC3BM,QAAQ;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNzF,OAAA;cAAKiF,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBlF,OAAA,CAACZ,KAAK;gBAAC2G,OAAO,EAAC,WAAW;gBAACd,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAC;cAEtD;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRzF,OAAA,CAACb,KAAK;gBACJiB,EAAE,EAAC,WAAW;gBACd4F,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,kBAAkB;gBAC9BP,KAAK,EAAEnD,gBAAiB;gBACxB2D,QAAQ,EAAGpD,CAAC,IAAKN,mBAAmB,CAACM,CAAC,CAACqD,MAAM,CAACT,KAAK,CAAE;gBACrDT,SAAS,EAAC,0CAA0C;gBACpDa,YAAY,EAAC,cAAc;gBAC3BM,QAAQ;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EACLhD,UAAU,iBACTzC,OAAA;cAAKiF,SAAS,EAAC,yEAAyE;cAAAC,QAAA,EACrFzC;YAAU;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CACN,eACDzF,OAAA,CAACd,MAAM;cAAC8G,IAAI,EAAC,QAAQ;cAACf,SAAS,EAAC,sCAAsC;cAACsB,QAAQ,EAAEpF,OAAQ;cAAA+D,QAAA,EAAC;YAE1F;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3E,EAAA,CAzgBeL,SAAS;AAAA+F,EAAA,GAAT/F,SAAS;AAAA,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}