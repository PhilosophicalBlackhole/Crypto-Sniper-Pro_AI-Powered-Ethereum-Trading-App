{"ast":null,"code":"/**\n * QuickGlance - compact KPI bar for Mainnet/Testnet with sticky option and preferences\n * Enhancements:\n * - Tooltips for metric labels (shadcn Tooltip)\n * - Auto-close preferences upon change with a small \"Preferences saved\" toast\n * - Retains outside click, Escape, and scroll-to-close behaviors\n */import React,{useEffect,useMemo,useRef,useState}from'react';import{Network,Zap,Target,Gauge,Settings,HelpCircle}from'lucide-react';import{Card,CardContent}from'./ui/card';import{Badge}from'./ui/badge';import{Button}from'./ui/button';import{Switch}from'./ui/switch';import{Label}from'./ui/label';import{Tooltip,TooltipContent,TooltipProvider,TooltipTrigger}from'./ui/tooltip';import{useAdvancedTrading}from'../hooks/useAdvancedTrading';import{toast}from'sonner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * Return a concise help text for a given metric key (tooltip content).\n */function getMetricHelp(key){switch(key){case'network':return'Your current chain. Mainnet is required for live trading.';case'fastGas':return'Estimated fast gas price (GWEI) for quicker confirmations.';case'activeSnipes':return'Number of enabled snipe configurations currently monitoring.';case'successRate':return'Percentage of recent snipes that executed successfully.';default:return'';}}/**\n * QuickGlance component - small horizontal KPI row with optional sticky behavior and preferences.\n */export function QuickGlance(_ref){let{botStatus,isMainnet,networkName,sticky=false,offsetTopPx=16,closeOnScroll=true}=_ref;const{networkStats}=useAdvancedTrading();/** Persist user-selected metrics */const STORAGE_KEY='quick_glance_metrics';/** Default to all four metrics */const defaultMetrics=['network','fastGas','activeSnipes','successRate'];const[selected,setSelected]=useState(defaultMetrics);const[showPrefs,setShowPrefs]=useState(false);// Refs to manage outside click for Preferences\nconst prefsRef=useRef(null);const triggerRef=useRef(null);// Load preferences on mount\nuseEffect(()=>{try{const raw=localStorage.getItem(STORAGE_KEY);if(raw){const parsed=JSON.parse(raw);if(Array.isArray(parsed)&&parsed.length>=2){setSelected(parsed);}}}catch{// ignore malformed\n}},[]);// Save preferences when selected changes\nuseEffect(()=>{try{localStorage.setItem(STORAGE_KEY,JSON.stringify(selected));}catch{// ignore storage errors\n}},[selected]);/**\n   * Toggle a metric in preferences with a minimum of 2 preserved.\n   * Auto-closes preferences and shows a small confirmation toast.\n   */const toggleMetric=key=>{setSelected(prev=>{const has=prev.includes(key);// If removing, keep at least two\nif(has){if(prev.length<=2){toast.warning('Keep at least two metrics',{duration:1200});return prev;}const next=prev.filter(k=>k!==key);// Acknowledge and close\nsetShowPrefs(false);toast.success('Preferences saved',{duration:1200});return next;}// Add\nconst next=[...prev,key];// Acknowledge and close\nsetShowPrefs(false);toast.success('Preferences saved',{duration:1200});return next;});};/**\n   * Close preferences when clicking outside or pressing Escape.\n   */useEffect(()=>{if(!showPrefs)return;const onDocMouseDown=e=>{const target=e.target;const panel=prefsRef.current;const trigger=triggerRef.current;const isInsidePanel=!!panel&&panel.contains(target);const isOnTrigger=!!trigger&&trigger.contains(target);if(!isInsidePanel&&!isOnTrigger){setShowPrefs(false);}};const onKeyDown=e=>{if(e.key==='Escape'){setShowPrefs(false);}};document.addEventListener('mousedown',onDocMouseDown);document.addEventListener('keydown',onKeyDown);return()=>{document.removeEventListener('mousedown',onDocMouseDown);document.removeEventListener('keydown',onKeyDown);};},[showPrefs]);/**\n   * Auto-close preferences on scroll to avoid a \"sticky open\" feel,\n   * especially when the container is sticky.\n   */useEffect(()=>{if(!showPrefs||!closeOnScroll)return;const onScroll=()=>setShowPrefs(false);window.addEventListener('scroll',onScroll,{passive:true});return()=>window.removeEventListener('scroll',onScroll);},[showPrefs,closeOnScroll]);/**\n   * Render a small help icon + tooltip next to a label text.\n   * Note: We removed the native title attribute to prevent duplicate browser tooltips.\n   */const LabelHelp=_ref2=>{let{text,helpKey}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:text}),/*#__PURE__*/_jsxs(Tooltip,{children:[/*#__PURE__*/_jsx(TooltipTrigger,{asChild:true,children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"p-0.5 rounded text-slate-500 hover:text-slate-300\",\"aria-label\":`${text} help`,children:/*#__PURE__*/_jsx(HelpCircle,{className:\"h-3.5 w-3.5\"})})}),/*#__PURE__*/_jsx(TooltipContent,{side:\"top\",className:\"bg-slate-800 border-slate-700 text-slate-200\",children:getMetricHelp(helpKey)})]})]});};/** Memoize metric blocks for clean mapping */const metricBlocks=useMemo(()=>{const blocks={network:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-slate-300 text-sm\",children:[/*#__PURE__*/_jsx(Network,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(LabelHelp,{text:\"Network\",helpKey:\"network\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:`inline-block h-2 w-2 rounded-full ${isMainnet?'bg-emerald-400':'bg-amber-400'}`}),/*#__PURE__*/_jsx(Badge,{variant:\"outline\",className:\"bg-transparent border-slate-600 text-slate-200\",children:isMainnet?'Mainnet':networkName})]})]}),fastGas:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-slate-300 text-sm\",children:[/*#__PURE__*/_jsx(Zap,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(LabelHelp,{text:\"Fast Gas\",helpKey:\"fastGas\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-white font-semibold\",children:[networkStats.fastGasPrice.toFixed(1),\" GWEI\"]})]}),activeSnipes:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-slate-300 text-sm\",children:[/*#__PURE__*/_jsx(Target,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(LabelHelp,{text:\"Active Snipes\",helpKey:\"activeSnipes\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-white font-semibold\",children:botStatus.activeSnipes})]}),successRate:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-slate-300 text-sm\",children:[/*#__PURE__*/_jsx(Gauge,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(LabelHelp,{text:\"Success Rate\",helpKey:\"successRate\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-white font-semibold\",children:[botStatus.successRate.toFixed(1),\"%\"]})]})};return blocks;},[botStatus.activeSnipes,botStatus.successRate,isMainnet,networkName,networkStats.fastGasPrice]);// Sticky classes and styles\nconst stickyClasses=sticky?'sticky z-30 supports-[backdrop-filter]:bg-slate-900/50':'';const stickyStyle=sticky?{top:`${offsetTopPx}px`}:undefined;return/*#__PURE__*/_jsx(TooltipProvider,{delayDuration:200,children:/*#__PURE__*/_jsxs(Card,{className:`bg-slate-900/20 backdrop-blur-sm border-slate-700/20 ${stickyClasses}`,style:stickyStyle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-3 top-3\",children:/*#__PURE__*/_jsx(Button,{ref:triggerRef,variant:\"ghost\",size:\"sm\",className:\"text-slate-400 hover:text-white\",onClick:()=>setShowPrefs(v=>!v),\"aria-expanded\":showPrefs,\"aria-controls\":\"quick-glance-preferences\",children:/*#__PURE__*/_jsx(Settings,{className:\"h-4 w-4\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-3 top-3 z-40\",children:showPrefs&&/*#__PURE__*/_jsxs(\"div\",{ref:prefsRef,id:\"quick-glance-preferences\",className:\"w-64 p-3 rounded-lg border border-slate-700/60 bg-slate-900/90 backdrop-blur-md shadow-xl\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-slate-200 text-sm font-medium mb-2\",children:\"Quick Glance Preferences\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:['network','fastGas','activeSnipes','successRate'].map(key=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:`qg-${key}`,className:\"text-slate-300 capitalize\",children:key==='fastGas'?'Fast Gas':key==='activeSnipes'?'Active Snipes':key==='successRate'?'Success Rate':'Network'}),/*#__PURE__*/_jsx(Switch,{id:`qg-${key}`,checked:selected.includes(key),onCheckedChange:()=>toggleMetric(key)})]},key))}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 text-xs text-slate-400\",children:\"Keep at least two metrics enabled.\"})]})})]}),/*#__PURE__*/_jsx(CardContent,{className:\"p-4\",children:/*#__PURE__*/_jsx(\"div\",{className:`grid gap-3 ${selected.length<=2?'grid-cols-1 sm:grid-cols-2':selected.length===3?'grid-cols-1 sm:grid-cols-3':'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'}`,children:selected.map(key=>/*#__PURE__*/_jsx(React.Fragment,{children:metricBlocks[key]},key))})})]})});}","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Network","Zap","Target","Gauge","Settings","HelpCircle","Card","CardContent","Badge","Button","Switch","Label","Tooltip","TooltipContent","TooltipProvider","TooltipTrigger","useAdvancedTrading","toast","jsx","_jsx","jsxs","_jsxs","getMetricHelp","key","QuickGlance","_ref","botStatus","isMainnet","networkName","sticky","offsetTopPx","closeOnScroll","networkStats","STORAGE_KEY","defaultMetrics","selected","setSelected","showPrefs","setShowPrefs","prefsRef","triggerRef","raw","localStorage","getItem","parsed","JSON","parse","Array","isArray","length","setItem","stringify","toggleMetric","prev","has","includes","warning","duration","next","filter","k","success","onDocMouseDown","e","target","panel","current","trigger","isInsidePanel","contains","isOnTrigger","onKeyDown","document","addEventListener","removeEventListener","onScroll","window","passive","LabelHelp","_ref2","text","helpKey","className","children","asChild","type","side","metricBlocks","blocks","network","variant","fastGas","fastGasPrice","toFixed","activeSnipes","successRate","stickyClasses","stickyStyle","top","undefined","delayDuration","style","ref","size","onClick","v","id","map","htmlFor","checked","onCheckedChange","Fragment"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/components/QuickGlance.tsx"],"sourcesContent":["/**\n * QuickGlance - compact KPI bar for Mainnet/Testnet with sticky option and preferences\n * Enhancements:\n * - Tooltips for metric labels (shadcn Tooltip)\n * - Auto-close preferences upon change with a small \"Preferences saved\" toast\n * - Retains outside click, Escape, and scroll-to-close behaviors\n */\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { Network, Zap, Target, Gauge, Settings, HelpCircle } from 'lucide-react';\nimport { Card, CardContent } from './ui/card';\nimport { Badge } from './ui/badge';\nimport { Button } from './ui/button';\nimport { Switch } from './ui/switch';\nimport { Label } from './ui/label';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\nimport { useAdvancedTrading } from '../hooks/useAdvancedTrading';\nimport { BotStatus as BotStatusType } from '../types/trading';\nimport { toast } from 'sonner';\n\ntype MetricKey = 'network' | 'fastGas' | 'activeSnipes' | 'successRate';\n\ninterface QuickGlanceProps {\n  /** Current bot status to display minimal metrics */\n  botStatus: BotStatusType;\n  /** Whether connected to Ethereum Mainnet */\n  isMainnet: boolean;\n  /** Friendly network name for non-mainnet environments */\n  networkName: string;\n  /** Enable sticky positioning */\n  sticky?: boolean;\n  /** Top offset in pixels (only used if sticky is true) */\n  offsetTopPx?: number;\n  /** When true, automatically close preferences panel on scroll */\n  closeOnScroll?: boolean;\n}\n\n/**\n * Return a concise help text for a given metric key (tooltip content).\n */\nfunction getMetricHelp(key: MetricKey): string {\n  switch (key) {\n    case 'network':\n      return 'Your current chain. Mainnet is required for live trading.';\n    case 'fastGas':\n      return 'Estimated fast gas price (GWEI) for quicker confirmations.';\n    case 'activeSnipes':\n      return 'Number of enabled snipe configurations currently monitoring.';\n    case 'successRate':\n      return 'Percentage of recent snipes that executed successfully.';\n    default:\n      return '';\n  }\n}\n\n/**\n * QuickGlance component - small horizontal KPI row with optional sticky behavior and preferences.\n */\nexport function QuickGlance({\n  botStatus,\n  isMainnet,\n  networkName,\n  sticky = false,\n  offsetTopPx = 16,\n  closeOnScroll = true,\n}: QuickGlanceProps) {\n  const { networkStats } = useAdvancedTrading();\n\n  /** Persist user-selected metrics */\n  const STORAGE_KEY = 'quick_glance_metrics';\n\n  /** Default to all four metrics */\n  const defaultMetrics: MetricKey[] = ['network', 'fastGas', 'activeSnipes', 'successRate'];\n\n  const [selected, setSelected] = useState<MetricKey[]>(defaultMetrics);\n  const [showPrefs, setShowPrefs] = useState(false);\n\n  // Refs to manage outside click for Preferences\n  const prefsRef = useRef<HTMLDivElement | null>(null);\n  const triggerRef = useRef<HTMLButtonElement | null>(null);\n\n  // Load preferences on mount\n  useEffect(() => {\n    try {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      if (raw) {\n        const parsed = JSON.parse(raw) as MetricKey[];\n        if (Array.isArray(parsed) && parsed.length >= 2) {\n          setSelected(parsed);\n        }\n      }\n    } catch {\n      // ignore malformed\n    }\n  }, []);\n\n  // Save preferences when selected changes\n  useEffect(() => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(selected));\n    } catch {\n      // ignore storage errors\n    }\n  }, [selected]);\n\n  /**\n   * Toggle a metric in preferences with a minimum of 2 preserved.\n   * Auto-closes preferences and shows a small confirmation toast.\n   */\n  const toggleMetric = (key: MetricKey) => {\n    setSelected((prev) => {\n      const has = prev.includes(key);\n\n      // If removing, keep at least two\n      if (has) {\n        if (prev.length <= 2) {\n          toast.warning('Keep at least two metrics', { duration: 1200 });\n          return prev;\n        }\n        const next = prev.filter((k) => k !== key);\n        // Acknowledge and close\n        setShowPrefs(false);\n        toast.success('Preferences saved', { duration: 1200 });\n        return next;\n      }\n\n      // Add\n      const next = [...prev, key];\n      // Acknowledge and close\n      setShowPrefs(false);\n      toast.success('Preferences saved', { duration: 1200 });\n      return next;\n    });\n  };\n\n  /**\n   * Close preferences when clicking outside or pressing Escape.\n   */\n  useEffect(() => {\n    if (!showPrefs) return;\n\n    const onDocMouseDown = (e: MouseEvent) => {\n      const target = e.target as Node;\n      const panel = prefsRef.current;\n      const trigger = triggerRef.current;\n      const isInsidePanel = !!panel && panel.contains(target);\n      const isOnTrigger = !!trigger && trigger.contains(target);\n      if (!isInsidePanel && !isOnTrigger) {\n        setShowPrefs(false);\n      }\n    };\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        setShowPrefs(false);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocMouseDown);\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', onDocMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [showPrefs]);\n\n  /**\n   * Auto-close preferences on scroll to avoid a \"sticky open\" feel,\n   * especially when the container is sticky.\n   */\n  useEffect(() => {\n    if (!showPrefs || !closeOnScroll) return;\n    const onScroll = () => setShowPrefs(false);\n    window.addEventListener('scroll', onScroll, { passive: true });\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [showPrefs, closeOnScroll]);\n\n  /**\n   * Render a small help icon + tooltip next to a label text.\n   * Note: We removed the native title attribute to prevent duplicate browser tooltips.\n   */\n  const LabelHelp = ({ text, helpKey }: { text: string; helpKey: MetricKey }) => (\n    <div className=\"flex items-center gap-1\">\n      <span>{text}</span>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <button\n            type=\"button\"\n            className=\"p-0.5 rounded text-slate-500 hover:text-slate-300\"\n            aria-label={`${text} help`}\n          >\n            <HelpCircle className=\"h-3.5 w-3.5\" />\n          </button>\n        </TooltipTrigger>\n        <TooltipContent side=\"top\" className=\"bg-slate-800 border-slate-700 text-slate-200\">\n          {getMetricHelp(helpKey)}\n        </TooltipContent>\n      </Tooltip>\n    </div>\n  );\n\n  /** Memoize metric blocks for clean mapping */\n  const metricBlocks = useMemo(() => {\n    const blocks: Record<MetricKey, JSX.Element> = {\n      network: (\n        <div className=\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-slate-300 text-sm\">\n            <Network className=\"h-4 w-4\" />\n            <LabelHelp text=\"Network\" helpKey=\"network\" />\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`inline-block h-2 w-2 rounded-full ${isMainnet ? 'bg-emerald-400' : 'bg-amber-400'}`} />\n            <Badge variant=\"outline\" className=\"bg-transparent border-slate-600 text-slate-200\">\n              {isMainnet ? 'Mainnet' : networkName}\n            </Badge>\n          </div>\n        </div>\n      ),\n      fastGas: (\n        <div className=\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-slate-300 text-sm\">\n            <Zap className=\"h-4 w-4\" />\n            <LabelHelp text=\"Fast Gas\" helpKey=\"fastGas\" />\n          </div>\n          <div className=\"text-white font-semibold\">{networkStats.fastGasPrice.toFixed(1)} GWEI</div>\n        </div>\n      ),\n      activeSnipes: (\n        <div className=\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-slate-300 text-sm\">\n            <Target className=\"h-4 w-4\" />\n            <LabelHelp text=\"Active Snipes\" helpKey=\"activeSnipes\" />\n          </div>\n          <div className=\"text-white font-semibold\">{botStatus.activeSnipes}</div>\n        </div>\n      ),\n      successRate: (\n        <div className=\"flex items-center justify-between p-3 bg-slate-800 rounded-lg\">\n          <div className=\"flex items-center gap-2 text-slate-300 text-sm\">\n            <Gauge className=\"h-4 w-4\" />\n            <LabelHelp text=\"Success Rate\" helpKey=\"successRate\" />\n          </div>\n          <div className=\"text-white font-semibold\">{botStatus.successRate.toFixed(1)}%</div>\n        </div>\n      ),\n    };\n    return blocks;\n  }, [botStatus.activeSnipes, botStatus.successRate, isMainnet, networkName, networkStats.fastGasPrice]);\n\n  // Sticky classes and styles\n  const stickyClasses = sticky ? 'sticky z-30 supports-[backdrop-filter]:bg-slate-900/50' : '';\n  const stickyStyle = sticky ? ({ top: `${offsetTopPx}px` } as React.CSSProperties) : undefined;\n\n  return (\n    <TooltipProvider delayDuration={200}>\n      <Card className={`bg-slate-900/20 backdrop-blur-sm border-slate-700/20 ${stickyClasses}`} style={stickyStyle}>\n        {/* Settings trigger */}\n        <div className=\"relative\">\n          <div className=\"absolute right-3 top-3\">\n            <Button\n              ref={triggerRef}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-slate-400 hover:text-white\"\n              onClick={() => setShowPrefs((v) => !v)}\n              aria-expanded={showPrefs}\n              aria-controls=\"quick-glance-preferences\"\n            >\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n          </div>\n\n          {/* Preferences floating panel */}\n          <div className=\"absolute right-3 top-3 z-40\">\n            {showPrefs && (\n              <div\n                ref={prefsRef}\n                id=\"quick-glance-preferences\"\n                className=\"w-64 p-3 rounded-lg border border-slate-700/60 bg-slate-900/90 backdrop-blur-md shadow-xl\"\n              >\n                <div className=\"text-slate-200 text-sm font-medium mb-2\">Quick Glance Preferences</div>\n                <div className=\"space-y-3\">\n                  {(['network', 'fastGas', 'activeSnipes', 'successRate'] as MetricKey[]).map((key) => (\n                    <div key={key} className=\"flex items-center justify-between\">\n                      <Label htmlFor={`qg-${key}`} className=\"text-slate-300 capitalize\">\n                        {key === 'fastGas'\n                          ? 'Fast Gas'\n                          : key === 'activeSnipes'\n                          ? 'Active Snipes'\n                          : key === 'successRate'\n                          ? 'Success Rate'\n                          : 'Network'}\n                      </Label>\n                      <Switch id={`qg-${key}`} checked={selected.includes(key)} onCheckedChange={() => toggleMetric(key)} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"mt-3 text-xs text-slate-400\">Keep at least two metrics enabled.</div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <CardContent className=\"p-4\">\n          {/* Responsive grid based on count */}\n          <div\n            className={`grid gap-3 ${\n              selected.length <= 2\n                ? 'grid-cols-1 sm:grid-cols-2'\n                : selected.length === 3\n                ? 'grid-cols-1 sm:grid-cols-3'\n                : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'\n            }`}\n          >\n            {selected.map((key) => (\n              <React.Fragment key={key}>{metricBlocks[key]}</React.Fragment>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </TooltipProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}