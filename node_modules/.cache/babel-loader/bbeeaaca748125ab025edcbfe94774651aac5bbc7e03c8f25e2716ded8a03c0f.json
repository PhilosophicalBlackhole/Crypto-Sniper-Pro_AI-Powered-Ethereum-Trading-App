{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * Custom hook for wallet connection and management\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nexport function useWallet() {\n  _s();\n  const [walletState, setWalletState] = useState({\n    isConnected: false,\n    address: null,\n    balance: '0',\n    chainId: null,\n    isConnecting: false,\n    error: null\n  });\n  const [demoMode, setDemoMode] = useState(false);\n  const updateBalance = useCallback(async address => {\n    try {\n      if (window.ethereum) {\n        const balance = await window.ethereum.request({\n          method: 'eth_getBalance',\n          params: [address, 'latest']\n        });\n        const balanceInEth = (parseInt(balance, 16) / 1e18).toFixed(4);\n        setWalletState(prev => ({\n          ...prev,\n          balance: balanceInEth\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  }, []);\n  const connectDemoWallet = useCallback(() => {\n    setWalletState(prev => ({\n      ...prev,\n      isConnecting: true,\n      error: null\n    }));\n\n    // Simulate connection delay\n    setTimeout(() => {\n      setWalletState({\n        isConnected: true,\n        address: '0x742d35Cc6634C0532925a3b8D',\n        balance: '2.4567',\n        chainId: 1,\n        isConnecting: false,\n        error: null\n      });\n      setDemoMode(true);\n    }, 1500);\n  }, []);\n  const connectWallet = useCallback(async () => {\n    if (!window.ethereum) {\n      // Instead of showing error, offer demo mode\n      connectDemoWallet();\n      return;\n    }\n    setWalletState(prev => ({\n      ...prev,\n      isConnecting: true,\n      error: null\n    }));\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const chainId = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      if (accounts.length > 0) {\n        const address = accounts[0];\n        setWalletState(prev => ({\n          ...prev,\n          isConnected: true,\n          address,\n          chainId: parseInt(chainId, 16),\n          isConnecting: false\n        }));\n        await updateBalance(address);\n      }\n    } catch (error) {\n      setWalletState(prev => ({\n        ...prev,\n        isConnecting: false,\n        error: error.message || 'Failed to connect wallet'\n      }));\n    }\n  }, [updateBalance]);\n  const disconnectWallet = useCallback(() => {\n    setWalletState({\n      isConnected: false,\n      address: null,\n      balance: '0',\n      chainId: null,\n      isConnecting: false,\n      error: null\n    });\n    setDemoMode(false);\n  }, []);\n  useEffect(() => {\n    if (window.ethereum) {\n      const handleAccountsChanged = accounts => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          setWalletState(prev => ({\n            ...prev,\n            address: accounts[0]\n          }));\n          updateBalance(accounts[0]);\n        }\n      };\n      const handleChainChanged = chainId => {\n        setWalletState(prev => ({\n          ...prev,\n          chainId: parseInt(chainId, 16)\n        }));\n      };\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', handleChainChanged);\n      return () => {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      };\n    }\n  }, [disconnectWallet, updateBalance]);\n  return {\n    ...walletState,\n    connectWallet,\n    disconnectWallet,\n    updateBalance: () => walletState.address && updateBalance(walletState.address),\n    demoMode\n  };\n}\n_s(useWallet, \"i+o5PhLRMrz8+1DYLuuEw6zWMQU=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useWallet","_s","walletState","setWalletState","isConnected","address","balance","chainId","isConnecting","error","demoMode","setDemoMode","updateBalance","window","ethereum","request","method","params","balanceInEth","parseInt","toFixed","prev","console","connectDemoWallet","setTimeout","connectWallet","accounts","length","message","disconnectWallet","handleAccountsChanged","handleChainChanged","on","removeListener"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/hooks/useWallet.ts"],"sourcesContent":["/**\n * Custom hook for wallet connection and management\n */\n\nimport { useState, useEffect, useCallback } from 'react';\n\nexport interface WalletState {\n  isConnected: boolean;\n  address: string | null;\n  balance: string;\n  chainId: number | null;\n  isConnecting: boolean;\n  error: string | null;\n}\n\nexport function useWallet() {\n  const [walletState, setWalletState] = useState<WalletState>({\n    isConnected: false,\n    address: null,\n    balance: '0',\n    chainId: null,\n    isConnecting: false,\n    error: null,\n  });\n\n  const [demoMode, setDemoMode] = useState(false);\n\n  const updateBalance = useCallback(async (address: string) => {\n    try {\n      if (window.ethereum) {\n        const balance = await window.ethereum.request({\n          method: 'eth_getBalance',\n          params: [address, 'latest'],\n        });\n        const balanceInEth = (parseInt(balance, 16) / 1e18).toFixed(4);\n        setWalletState(prev => ({ ...prev, balance: balanceInEth }));\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  }, []);\n\n  const connectDemoWallet = useCallback(() => {\n    setWalletState(prev => ({ ...prev, isConnecting: true, error: null }));\n    \n    // Simulate connection delay\n    setTimeout(() => {\n      setWalletState({\n        isConnected: true,\n        address: '0x742d35Cc6634C0532925a3b8D',\n        balance: '2.4567',\n        chainId: 1,\n        isConnecting: false,\n        error: null,\n      });\n      setDemoMode(true);\n    }, 1500);\n  }, []);\n\n  const connectWallet = useCallback(async () => {\n    if (!window.ethereum) {\n      // Instead of showing error, offer demo mode\n      connectDemoWallet();\n      return;\n    }\n\n    setWalletState(prev => ({ ...prev, isConnecting: true, error: null }));\n\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      const chainId = await window.ethereum.request({\n        method: 'eth_chainId',\n      });\n\n      if (accounts.length > 0) {\n        const address = accounts[0];\n        setWalletState(prev => ({\n          ...prev,\n          isConnected: true,\n          address,\n          chainId: parseInt(chainId, 16),\n          isConnecting: false,\n        }));\n        await updateBalance(address);\n      }\n    } catch (error: any) {\n      setWalletState(prev => ({\n        ...prev,\n        isConnecting: false,\n        error: error.message || 'Failed to connect wallet',\n      }));\n    }\n  }, [updateBalance]);\n\n  const disconnectWallet = useCallback(() => {\n    setWalletState({\n      isConnected: false,\n      address: null,\n      balance: '0',\n      chainId: null,\n      isConnecting: false,\n      error: null,\n    });\n    setDemoMode(false);\n  }, []);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          setWalletState(prev => ({ ...prev, address: accounts[0] }));\n          updateBalance(accounts[0]);\n        }\n      };\n\n      const handleChainChanged = (chainId: string) => {\n        setWalletState(prev => ({ \n          ...prev, \n          chainId: parseInt(chainId, 16) \n        }));\n      };\n\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', handleChainChanged);\n\n      return () => {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      };\n    }\n  }, [disconnectWallet, updateBalance]);\n\n  return {\n    ...walletState,\n    connectWallet,\n    disconnectWallet,\n    updateBalance: () => walletState.address && updateBalance(walletState.address),\n    demoMode,\n  };\n}\n"],"mappings":";AAAA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAWxD,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAc;IAC1DO,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,GAAG;IACZC,OAAO,EAAE,IAAI;IACbC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMe,aAAa,GAAGb,WAAW,CAAC,MAAOM,OAAe,IAAK;IAC3D,IAAI;MACF,IAAIQ,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMR,OAAO,GAAG,MAAMO,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;UAC5CC,MAAM,EAAE,gBAAgB;UACxBC,MAAM,EAAE,CAACZ,OAAO,EAAE,QAAQ;QAC5B,CAAC,CAAC;QACF,MAAMa,YAAY,GAAG,CAACC,QAAQ,CAACb,OAAO,EAAE,EAAE,CAAC,GAAG,IAAI,EAAEc,OAAO,CAAC,CAAC,CAAC;QAC9DjB,cAAc,CAACkB,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEf,OAAO,EAAEY;QAAa,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,iBAAiB,GAAGxB,WAAW,CAAC,MAAM;IAC1CI,cAAc,CAACkB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEb,YAAY,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;;IAEtE;IACAe,UAAU,CAAC,MAAM;MACfrB,cAAc,CAAC;QACbC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE,6BAA6B;QACtCC,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE,CAAC;QACVC,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAE;MACT,CAAC,CAAC;MACFE,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,aAAa,GAAG1B,WAAW,CAAC,YAAY;IAC5C,IAAI,CAACc,MAAM,CAACC,QAAQ,EAAE;MACpB;MACAS,iBAAiB,CAAC,CAAC;MACnB;IACF;IAEApB,cAAc,CAACkB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEb,YAAY,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;IAEtE,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMb,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC7CC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,MAAMT,OAAO,GAAG,MAAMM,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC5CC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAIU,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QACvB,MAAMtB,OAAO,GAAGqB,QAAQ,CAAC,CAAC,CAAC;QAC3BvB,cAAc,CAACkB,IAAI,KAAK;UACtB,GAAGA,IAAI;UACPjB,WAAW,EAAE,IAAI;UACjBC,OAAO;UACPE,OAAO,EAAEY,QAAQ,CAACZ,OAAO,EAAE,EAAE,CAAC;UAC9BC,YAAY,EAAE;QAChB,CAAC,CAAC,CAAC;QACH,MAAMI,aAAa,CAACP,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOI,KAAU,EAAE;MACnBN,cAAc,CAACkB,IAAI,KAAK;QACtB,GAAGA,IAAI;QACPb,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAEA,KAAK,CAACmB,OAAO,IAAI;MAC1B,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAAChB,aAAa,CAAC,CAAC;EAEnB,MAAMiB,gBAAgB,GAAG9B,WAAW,CAAC,MAAM;IACzCI,cAAc,CAAC;MACbC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,GAAG;MACZC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE;IACT,CAAC,CAAC;IACFE,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAIe,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMgB,qBAAqB,GAAIJ,QAAkB,IAAK;QACpD,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;UACzBE,gBAAgB,CAAC,CAAC;QACpB,CAAC,MAAM;UACL1B,cAAc,CAACkB,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEhB,OAAO,EAAEqB,QAAQ,CAAC,CAAC;UAAE,CAAC,CAAC,CAAC;UAC3Dd,aAAa,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B;MACF,CAAC;MAED,MAAMK,kBAAkB,GAAIxB,OAAe,IAAK;QAC9CJ,cAAc,CAACkB,IAAI,KAAK;UACtB,GAAGA,IAAI;UACPd,OAAO,EAAEY,QAAQ,CAACZ,OAAO,EAAE,EAAE;QAC/B,CAAC,CAAC,CAAC;MACL,CAAC;MAEDM,MAAM,CAACC,QAAQ,CAACkB,EAAE,CAAC,iBAAiB,EAAEF,qBAAqB,CAAC;MAC5DjB,MAAM,CAACC,QAAQ,CAACkB,EAAE,CAAC,cAAc,EAAED,kBAAkB,CAAC;MAEtD,OAAO,MAAM;QACXlB,MAAM,CAACC,QAAQ,CAACmB,cAAc,CAAC,iBAAiB,EAAEH,qBAAqB,CAAC;QACxEjB,MAAM,CAACC,QAAQ,CAACmB,cAAc,CAAC,cAAc,EAAEF,kBAAkB,CAAC;MACpE,CAAC;IACH;EACF,CAAC,EAAE,CAACF,gBAAgB,EAAEjB,aAAa,CAAC,CAAC;EAErC,OAAO;IACL,GAAGV,WAAW;IACduB,aAAa;IACbI,gBAAgB;IAChBjB,aAAa,EAAEA,CAAA,KAAMV,WAAW,CAACG,OAAO,IAAIO,aAAa,CAACV,WAAW,CAACG,OAAO,CAAC;IAC9EK;EACF,CAAC;AACH;AAACT,EAAA,CAjIeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}