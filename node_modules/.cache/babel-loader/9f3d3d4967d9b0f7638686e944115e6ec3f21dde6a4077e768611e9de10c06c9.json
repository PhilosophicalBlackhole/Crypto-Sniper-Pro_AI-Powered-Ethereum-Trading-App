{"ast":null,"code":"/**\n * Form component for adding new snipe configurations\n * - Now gated to Ethereum Mainnet for submissions with a clear inline helper and \"Switch to Mainnet\" action.\n */import React,{useState}from'react';import{Plus,Target,AlertTriangle,Info}from'lucide-react';import{Card,CardContent,CardHeader,CardTitle}from'./ui/card';import{Button}from'./ui/button';import{Input}from'./ui/input';import{Label}from'./ui/label';import{Switch}from'./ui/switch';import{HelpTooltip}from'./HelpTooltip';import{useNetworkStatus}from'../hooks/useNetworkStatus';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * AddSnipeForm - creates a new snipe target.\n * Submission is restricted to Mainnet for safety and transparency.\n */export function AddSnipeForm(_ref){let{onAdd}=_ref;const[isOpen,setIsOpen]=useState(false);// Network gating for production trades\nconst{isMainnet,networkName,switchToMainnet}=useNetworkStatus();const[formData,setFormData]=useState({tokenAddress:'',targetPrice:0.001,maxPrice:0.002,amount:0.05,slippage:12,gasPrice:25,maxGas:300000,enabled:false,gasSettings:{mode:'auto',maxGasPrice:100,priorityFee:2,executionTimeout:120,retryCount:3},slippageSettings:{mode:'adaptive',baseSlippage:10,maxSlippage:25,liquidityThreshold:100000,volatilityMultiplier:1.5},autoSell:{enabled:false,profitTarget:50,stopLoss:-20,trailingStop:{enabled:false,percentage:5,activationPrice:20},partialSelling:{enabled:false,percentages:[25,50],priceTargets:[20,50]}},batchSettings:{enabled:false,maxBatchSize:3,batchDelay:200,nonceManagement:'auto',priority:5}});/** Validate hex address */const validateAddress=address=>{return address.startsWith('0x')&&address.length===42;};/** Submit handler - gated to Mainnet */const handleSubmit=e=>{e.preventDefault();if(!isMainnet){// Safety guard; should be disabled by UI, but keep logic safe\nreturn;}if(!formData.tokenAddress||!formData.tokenAddress.startsWith('0x')){alert('Please enter a valid token address');return;}onAdd(formData);setFormData({tokenAddress:'',targetPrice:0.001,maxPrice:0.002,amount:0.05,slippage:12,gasPrice:25,maxGas:300000,enabled:false,gasSettings:{mode:'auto',maxGasPrice:100,priorityFee:2,executionTimeout:120,retryCount:3},slippageSettings:{mode:'adaptive',baseSlippage:10,maxSlippage:25,liquidityThreshold:100000,volatilityMultiplier:1.5},autoSell:{enabled:false,profitTarget:50,stopLoss:-20,trailingStop:{enabled:false,percentage:5,activationPrice:20},partialSelling:{enabled:false,percentages:[25,50],priceTargets:[20,50]}},batchSettings:{enabled:false,maxBatchSize:3,batchDelay:200,nonceManagement:'auto',priority:5}});setIsOpen(false);};if(!isOpen){return/*#__PURE__*/_jsx(Card,{className:\"bg-gradient-to-r from-blue-900/50 to-purple-900/50 border-blue-500/50 border-dashed border-2\",children:/*#__PURE__*/_jsx(CardContent,{className:\"p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center space-y-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-blue-600 rounded-full w-12 h-12 mx-auto flex items-center justify-center\",children:/*#__PURE__*/_jsx(Plus,{className:\"h-6 w-6 text-white\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-white font-semibold mb-1\",children:\"Add Snipe Target\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-400 text-sm\",children:\"Configure a token to monitor and snipe\"})]}),/*#__PURE__*/_jsxs(Button,{onClick:()=>setIsOpen(true),className:\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3\",children:[/*#__PURE__*/_jsx(Target,{className:\"h-4 w-4 mr-2\"}),\"Create New Target\"]}),!isMainnet&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg text-left\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-amber-400 mt-0.5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-amber-300 text-xs\",children:[\"You are connected to \",networkName||'a test network',\". Live sniping is only available on Ethereum Mainnet.\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:switchToMainnet,className:\"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\",children:\"Switch to Mainnet\"})})]})]})})]})})});}return/*#__PURE__*/_jsxs(Card,{className:\"bg-slate-900/30 backdrop-blur-sm border-slate-700/30\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center gap-2 text-white\",children:[/*#__PURE__*/_jsx(Target,{className:\"h-5 w-5\"}),\"New Snipe Configuration\"]})}),/*#__PURE__*/_jsxs(CardContent,{children:[!isMainnet&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-amber-400 mt-0.5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-amber-200 text-sm\",children:[\"You are on \",networkName||'a test network',\". To create live sniping targets, switch to Ethereum Mainnet.\",/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:switchToMainnet,className:\"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\",children:\"Switch to Mainnet\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1 text-amber-300/90\",children:[/*#__PURE__*/_jsx(Info,{className:\"h-3 w-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:\"Demo/testing is available on the TESTNET tab.\"})]})]})]})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"tokenAddress\",className:\"text-slate-300\",children:\"Token Address *\"}),/*#__PURE__*/_jsx(Input,{id:\"tokenAddress\",type:\"text\",placeholder:\"0x...\",value:formData.tokenAddress,onChange:e=>setFormData(prev=>({...prev,tokenAddress:e.target.value})),className:`bg-slate-800 border-slate-600 text-white ${formData.tokenAddress&&!validateAddress(formData.tokenAddress)?'border-red-500':''}`,required:true}),formData.tokenAddress&&!validateAddress(formData.tokenAddress)&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-400 text-xs mt-1\",children:\"Please enter a valid Ethereum address\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"targetPrice\",className:\"text-slate-300\",children:\"Target Price (USD)\"}),/*#__PURE__*/_jsx(Input,{id:\"targetPrice\",type:\"number\",step:\"0.00000001\",value:formData.targetPrice,onChange:e=>setFormData(prev=>({...prev,targetPrice:parseFloat(e.target.value)})),className:\"bg-slate-800 border-slate-600 text-white\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"maxPrice\",className:\"text-slate-300\",children:\"Max Price (USD)\"}),/*#__PURE__*/_jsx(Input,{id:\"maxPrice\",type:\"number\",step:\"0.00000001\",value:formData.maxPrice,onChange:e=>setFormData(prev=>({...prev,maxPrice:parseFloat(e.target.value)})),className:\"bg-slate-800 border-slate-600 text-white\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"amount\",className:\"text-slate-300\",children:\"Amount (ETH)\"}),/*#__PURE__*/_jsx(Input,{id:\"amount\",type:\"number\",step:\"0.01\",value:formData.amount,onChange:e=>setFormData(prev=>({...prev,amount:parseFloat(e.target.value)})),className:\"bg-slate-800 border-slate-600 text-white\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"slippage\",className:\"text-slate-300\",children:\"Slippage (%)\"}),/*#__PURE__*/_jsx(Input,{id:\"slippage\",type:\"number\",step:\"0.1\",min:\"0.1\",max:\"50\",value:formData.slippage,onChange:e=>setFormData(prev=>({...prev,slippage:parseFloat(e.target.value)})),className:\"bg-slate-800 border-slate-600 text-white\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"gasPrice\",className:\"text-slate-300\",children:\"Gas Price (GWEI)\"}),/*#__PURE__*/_jsx(Input,{id:\"gasPrice\",type:\"number\",step:\"1\",min:\"1\",value:formData.gasPrice,onChange:e=>setFormData(prev=>({...prev,gasPrice:parseFloat(e.target.value)})),className:\"bg-slate-800 border-slate-600 text-white\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"maxGas\",className:\"text-slate-300\",children:\"Max Gas Limit\"}),/*#__PURE__*/_jsx(Input,{id:\"maxGas\",type:\"number\",step:\"1000\",min:\"21000\",value:formData.maxGas,onChange:e=>setFormData(prev=>({...prev,maxGas:parseInt(e.target.value)})),className:\"bg-slate-800 border-slate-600 text-white\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3 p-4 bg-slate-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Switch,{id:\"autoSellEnabled\",checked:formData.autoSell.enabled,onCheckedChange:checked=>setFormData(prev=>({...prev,autoSell:{...prev.autoSell,enabled:checked}}))}),/*#__PURE__*/_jsx(Label,{htmlFor:\"autoSellEnabled\",className:\"text-slate-300\",children:\"Enable Auto-Sell\"}),/*#__PURE__*/_jsx(HelpTooltip,{title:\"Auto-Sell\",content:\"Enable automatic take-profit/stop-loss logic after purchase.\",size:\"sm\"})]}),formData.autoSell.enabled&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"profitTarget\",className:\"text-slate-300\",children:\"Profit Target (%)\"}),/*#__PURE__*/_jsx(Input,{id:\"profitTarget\",type:\"number\",step:\"1\",value:formData.autoSell.profitTarget,onChange:e=>setFormData(prev=>({...prev,autoSell:{...prev.autoSell,profitTarget:parseFloat(e.target.value)}})),className:\"bg-slate-700 border-slate-600 text-white\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"stopLoss\",className:\"text-slate-300\",children:\"Stop Loss (%)\"}),/*#__PURE__*/_jsx(Input,{id:\"stopLoss\",type:\"number\",step:\"1\",value:formData.autoSell.stopLoss,onChange:e=>setFormData(prev=>({...prev,autoSell:{...prev.autoSell,stopLoss:parseFloat(e.target.value)}})),className:\"bg-slate-700 border-slate-600 text-white\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Switch,{id:\"enabled\",checked:formData.enabled,onCheckedChange:checked=>setFormData(prev=>({...prev,enabled:checked}))}),/*#__PURE__*/_jsx(Label,{htmlFor:\"enabled\",className:\"text-slate-300\",children:\"Start Sniping Immediately\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsxs(Button,{type:\"submit\",className:`flex-1 ${isMainnet?'bg-green-600 hover:bg-green-700':'bg-gray-600 cursor-not-allowed opacity-60'}`,disabled:!isMainnet||!validateAddress(formData.tokenAddress),title:isMainnet?undefined:'Switch to Ethereum Mainnet to create live sniping targets',children:[/*#__PURE__*/_jsx(Plus,{className:\"h-4 w-4 mr-2\"}),isMainnet?'Add Snipe Target':'Switch to Mainnet to Add']}),/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:()=>setIsOpen(false),variant:\"outline\",className:\"bg-transparent border-slate-600 text-slate-300\",children:\"Cancel\"})]})]})]})]});}","map":{"version":3,"names":["React","useState","Plus","Target","AlertTriangle","Info","Card","CardContent","CardHeader","CardTitle","Button","Input","Label","Switch","HelpTooltip","useNetworkStatus","jsx","_jsx","jsxs","_jsxs","AddSnipeForm","_ref","onAdd","isOpen","setIsOpen","isMainnet","networkName","switchToMainnet","formData","setFormData","tokenAddress","targetPrice","maxPrice","amount","slippage","gasPrice","maxGas","enabled","gasSettings","mode","maxGasPrice","priorityFee","executionTimeout","retryCount","slippageSettings","baseSlippage","maxSlippage","liquidityThreshold","volatilityMultiplier","autoSell","profitTarget","stopLoss","trailingStop","percentage","activationPrice","partialSelling","percentages","priceTargets","batchSettings","maxBatchSize","batchDelay","nonceManagement","priority","validateAddress","address","startsWith","length","handleSubmit","e","preventDefault","alert","className","children","onClick","variant","size","onSubmit","htmlFor","id","type","placeholder","value","onChange","prev","target","required","step","parseFloat","min","max","parseInt","checked","onCheckedChange","title","content","disabled","undefined"],"sources":["C:/Users/tpars/source/repos/Crypto Sniper Pro_ AI-Powered Ethereum Trading App/src/components/AddSnipeForm.tsx"],"sourcesContent":["/**\n * Form component for adding new snipe configurations\n * - Now gated to Ethereum Mainnet for submissions with a clear inline helper and \"Switch to Mainnet\" action.\n */\n\nimport React, { useState } from 'react';\nimport { Plus, Target, AlertTriangle, Info } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Switch } from './ui/switch';\nimport { HelpTooltip } from './HelpTooltip';\nimport { SnipeConfig } from '../types/trading';\nimport { useNetworkStatus } from '../hooks/useNetworkStatus';\n\ninterface AddSnipeFormProps {\n  /** Handler to add a new snipe config; only used when on Mainnet */\n  onAdd: (config: Omit<SnipeConfig, 'id'>) => void;\n}\n\n/**\n * AddSnipeForm - creates a new snipe target.\n * Submission is restricted to Mainnet for safety and transparency.\n */\nexport function AddSnipeForm({ onAdd }: AddSnipeFormProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Network gating for production trades\n  const { isMainnet, networkName, switchToMainnet } = useNetworkStatus();\n\n  const [formData, setFormData] = useState({\n    tokenAddress: '',\n    targetPrice: 0.001,\n    maxPrice: 0.002,\n    amount: 0.05,\n    slippage: 12,\n    gasPrice: 25,\n    maxGas: 300000,\n    enabled: false,\n    gasSettings: {\n      mode: 'auto' as const,\n      maxGasPrice: 100,\n      priorityFee: 2,\n      executionTimeout: 120,\n      retryCount: 3,\n    },\n    slippageSettings: {\n      mode: 'adaptive' as const,\n      baseSlippage: 10,\n      maxSlippage: 25,\n      liquidityThreshold: 100000,\n      volatilityMultiplier: 1.5,\n    },\n    autoSell: {\n      enabled: false,\n      profitTarget: 50,\n      stopLoss: -20,\n      trailingStop: {\n        enabled: false,\n        percentage: 5,\n        activationPrice: 20,\n      },\n      partialSelling: {\n        enabled: false,\n        percentages: [25, 50],\n        priceTargets: [20, 50],\n      },\n    },\n    batchSettings: {\n      enabled: false,\n      maxBatchSize: 3,\n      batchDelay: 200,\n      nonceManagement: 'auto' as const,\n      priority: 5,\n    },\n  });\n\n  /** Validate hex address */\n  const validateAddress = (address: string) => {\n    return address.startsWith('0x') && address.length === 42;\n  };\n\n  /** Submit handler - gated to Mainnet */\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!isMainnet) {\n      // Safety guard; should be disabled by UI, but keep logic safe\n      return;\n    }\n\n    if (!formData.tokenAddress || !formData.tokenAddress.startsWith('0x')) {\n      alert('Please enter a valid token address');\n      return;\n    }\n\n    onAdd(formData);\n    setFormData({\n      tokenAddress: '',\n      targetPrice: 0.001,\n      maxPrice: 0.002,\n      amount: 0.05,\n      slippage: 12,\n      gasPrice: 25,\n      maxGas: 300000,\n      enabled: false,\n      gasSettings: {\n        mode: 'auto' as const,\n        maxGasPrice: 100,\n        priorityFee: 2,\n        executionTimeout: 120,\n        retryCount: 3,\n      },\n      slippageSettings: {\n        mode: 'adaptive' as const,\n        baseSlippage: 10,\n        maxSlippage: 25,\n        liquidityThreshold: 100000,\n        volatilityMultiplier: 1.5,\n      },\n      autoSell: {\n        enabled: false,\n        profitTarget: 50,\n        stopLoss: -20,\n        trailingStop: {\n          enabled: false,\n          percentage: 5,\n          activationPrice: 20,\n        },\n        partialSelling: {\n          enabled: false,\n          percentages: [25, 50],\n          priceTargets: [20, 50],\n        },\n      },\n      batchSettings: {\n        enabled: false,\n        maxBatchSize: 3,\n        batchDelay: 200,\n        nonceManagement: 'auto' as const,\n        priority: 5,\n      },\n    });\n    setIsOpen(false);\n  };\n\n  if (!isOpen) {\n    return (\n      <Card className=\"bg-gradient-to-r from-blue-900/50 to-purple-900/50 border-blue-500/50 border-dashed border-2\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center space-y-3\">\n            <div className=\"p-3 bg-blue-600 rounded-full w-12 h-12 mx-auto flex items-center justify-center\">\n              <Plus className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h3 className=\"text-white font-semibold mb-1\">Add Snipe Target</h3>\n              <p className=\"text-slate-400 text-sm\">Configure a token to monitor and snipe</p>\n            </div>\n            <Button\n              onClick={() => setIsOpen(true)}\n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3\"\n            >\n              <Target className=\"h-4 w-4 mr-2\" />\n              Create New Target\n            </Button>\n\n            {/* Inline hint when not on mainnet */}\n            {!isMainnet && (\n              <div className=\"mt-3 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg text-left\">\n                <div className=\"flex items-start gap-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-amber-400 mt-0.5\" />\n                  <div className=\"text-amber-300 text-xs\">\n                    You are connected to {networkName || 'a test network'}. Live sniping is only available on Ethereum Mainnet.\n                    <div className=\"mt-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={switchToMainnet}\n                        className=\"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\"\n                      >\n                        Switch to Mainnet\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"bg-slate-900/30 backdrop-blur-sm border-slate-700/30\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-white\">\n          <Target className=\"h-5 w-5\" />\n          New Snipe Configuration\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent>\n        {/* Network gating helper */}\n        {!isMainnet && (\n          <div className=\"mb-4 p-3 bg-amber-900/20 border border-amber-500/40 rounded-lg\">\n            <div className=\"flex items-start gap-2\">\n              <AlertTriangle className=\"h-4 w-4 text-amber-400 mt-0.5\" />\n              <div className=\"text-amber-200 text-sm\">\n                You are on {networkName || 'a test network'}. To create live sniping targets, switch to Ethereum Mainnet.\n                <div className=\"mt-2 flex items-center gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={switchToMainnet}\n                    className=\"bg-transparent border-amber-400 text-amber-300 hover:bg-amber-500/10\"\n                  >\n                    Switch to Mainnet\n                  </Button>\n                  <div className=\"flex items-center gap-1 text-amber-300/90\">\n                    <Info className=\"h-3 w-3\" />\n                    <span className=\"text-xs\">Demo/testing is available on the TESTNET tab.</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"tokenAddress\" className=\"text-slate-300\">Token Address *</Label>\n            <Input\n              id=\"tokenAddress\"\n              type=\"text\"\n              placeholder=\"0x...\"\n              value={formData.tokenAddress}\n              onChange={(e) => setFormData(prev => ({ ...prev, tokenAddress: e.target.value }))}\n              className={`bg-slate-800 border-slate-600 text-white ${\n                formData.tokenAddress && !validateAddress(formData.tokenAddress) \n                  ? 'border-red-500' \n                  : ''\n              }`}\n              required\n            />\n            {formData.tokenAddress && !validateAddress(formData.tokenAddress) && (\n              <p className=\"text-red-400 text-xs mt-1\">Please enter a valid Ethereum address</p>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"targetPrice\" className=\"text-slate-300\">Target Price (USD)</Label>\n              <Input\n                id=\"targetPrice\"\n                type=\"number\"\n                step=\"0.00000001\"\n                value={formData.targetPrice}\n                onChange={(e) => setFormData(prev => ({ ...prev, targetPrice: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"maxPrice\" className=\"text-slate-300\">Max Price (USD)</Label>\n              <Input\n                id=\"maxPrice\"\n                type=\"number\"\n                step=\"0.00000001\"\n                value={formData.maxPrice}\n                onChange={(e) => setFormData(prev => ({ ...prev, maxPrice: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"amount\" className=\"text-slate-300\">Amount (ETH)</Label>\n              <Input\n                id=\"amount\"\n                type=\"number\"\n                step=\"0.01\"\n                value={formData.amount}\n                onChange={(e) => setFormData(prev => ({ ...prev, amount: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"slippage\" className=\"text-slate-300\">Slippage (%)</Label>\n              <Input\n                id=\"slippage\"\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"50\"\n                value={formData.slippage}\n                onChange={(e) => setFormData(prev => ({ ...prev, slippage: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"gasPrice\" className=\"text-slate-300\">Gas Price (GWEI)</Label>\n              <Input\n                id=\"gasPrice\"\n                type=\"number\"\n                step=\"1\"\n                min=\"1\"\n                value={formData.gasPrice}\n                onChange={(e) => setFormData(prev => ({ ...prev, gasPrice: parseFloat(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"maxGas\" className=\"text-slate-300\">Max Gas Limit</Label>\n              <Input\n                id=\"maxGas\"\n                type=\"number\"\n                step=\"1000\"\n                min=\"21000\"\n                value={formData.maxGas}\n                onChange={(e) => setFormData(prev => ({ ...prev, maxGas: parseInt(e.target.value) }))}\n                className=\"bg-slate-800 border-slate-600 text-white\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-3 p-4 bg-slate-800 rounded-lg\">\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id=\"autoSellEnabled\"\n                checked={formData.autoSell.enabled}\n                onCheckedChange={(checked) => \n                  setFormData(prev => ({ \n                    ...prev, \n                    autoSell: { ...prev.autoSell, enabled: checked }\n                  }))\n                }\n              />\n              <Label htmlFor=\"autoSellEnabled\" className=\"text-slate-300\">Enable Auto-Sell</Label>\n              <HelpTooltip\n                title=\"Auto-Sell\"\n                content=\"Enable automatic take-profit/stop-loss logic after purchase.\"\n                size=\"sm\"\n              />\n            </div>\n            \n            {formData.autoSell.enabled && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"profitTarget\" className=\"text-slate-300\">Profit Target (%)</Label>\n                  <Input\n                    id=\"profitTarget\"\n                    type=\"number\"\n                    step=\"1\"\n                    value={formData.autoSell.profitTarget}\n                    onChange={(e) => \n                      setFormData(prev => ({ \n                        ...prev, \n                        autoSell: { ...prev.autoSell, profitTarget: parseFloat(e.target.value) }\n                      }))\n                    }\n                    className=\"bg-slate-700 border-slate-600 text-white\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"stopLoss\" className=\"text-slate-300\">Stop Loss (%)</Label>\n                  <Input\n                    id=\"stopLoss\"\n                    type=\"number\"\n                    step=\"1\"\n                    value={formData.autoSell.stopLoss}\n                    onChange={(e) => \n                      setFormData(prev => ({ \n                        ...prev, \n                        autoSell: { ...prev.autoSell, stopLoss: parseFloat(e.target.value) }\n                      }))\n                    }\n                    className=\"bg-slate-700 border-slate-600 text-white\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"enabled\"\n              checked={formData.enabled}\n              onCheckedChange={(checked) => setFormData(prev => ({ ...prev, enabled: checked }))}\n            />\n            <Label htmlFor=\"enabled\" className=\"text-slate-300\">Start Sniping Immediately</Label>\n          </div>\n\n          <div className=\"flex gap-2\">\n            <Button \n              type=\"submit\" \n              className={`flex-1 ${isMainnet ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-600 cursor-not-allowed opacity-60'}`}\n              disabled={!isMainnet || !validateAddress(formData.tokenAddress)}\n              title={isMainnet ? undefined : 'Switch to Ethereum Mainnet to create live sniping targets'}\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              {isMainnet ? 'Add Snipe Target' : 'Switch to Mainnet to Add'}\n            </Button>\n            <Button \n              type=\"button\" \n              onClick={() => setIsOpen(false)}\n              variant=\"outline\" \n              className=\"bg-transparent border-slate-600 text-slate-300\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}